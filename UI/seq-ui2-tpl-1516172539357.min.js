!function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("app_setting_input.tpl.html",'<div class="app-setting-input">\n  <input ng-if="appSettingInput.type == \'Text\'" type="text" class="input input-xxlarge" autocomplete="off" placeholder="{{appSettingInput.placeholder}}"\n    ng-model="appSettingInput.model" ng-change="appSettingInput.onChange()" />\n\n  <input ng-if="appSettingInput.type == \'Password\'" type="password" class="input input-xxlarge" autocomplete="off" ng-model="appSettingInput.model"\n    ng-change="appSettingInput.onChange()" />\n\n  <input ng-if="appSettingInput.type == \'Integer\' || type == \'Decimal\'" type="number" step="{{ type == \'Decimal\' ? \'any\' : \'1\' }}"\n    class="input" autocomplete="off" placeholder="{{appSettingInput.placeholder}}" ng-model="appSettingInput.model" ng-change="appSettingInput.onChange()" />\n\n  <textarea class="input input-xxlarge" ng-if="appSettingInput.type == \'LongText\'" placeholder="{{appSettingInput.placeholder}}"\n    ng-model="appSettingInput.model" ng-change="appSettingInput.onChange()" rows="12"></textarea>\n\n  <label ng-if="appSettingInput.type == \'Checkbox\'">\n    <input class="input" type="checkbox" ng-model="appSettingInput.model" ng-change="appSettingInput.onChange()" ng-true-value="\'True\'"\n      ng-false-value="\'False\'" /> {{ appSettingInput.displayName }}</label>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("avatar.tpl.html",'<div class="avatar">\n  <div class="remote-image" ng-style="{\'background-image\': avatar.url }"></div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("change_password.tpl.html",'<div class="change-password">\n  <control-group ng-hide="!user.Id || required == \'true\' || !changePassword.isAuthenticationEnabled">\n    <label class="checkbox"><input type="checkbox" ng-disabled="changePassword.changing" ng-model="changePassword.changing" /> Change password</label>\n  </control-group>\n  <control-group label="Password" ng-if="changePassword.changing || !user.Id || required == \'true\'">\n    <input type="password" ng-model="user.NewPassword" />\n  </control-group>\n  <control-group label="Repeat password" ng-if="changePassword.changing || !user.Id || required == \'true\'">\n    <input class="input" type="password" ng-model="user.NewPasswordRepeat" />\n    <span ng-hide="user.NewPassword == user.NewPasswordRepeat"><em>The passwords don\'t match</em></span>\n  </control-group>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("checkmark.tpl.html",'<span class="checkmark"><span ng-show="checked">&#9745;</span><span ng-hide="checked">&#9744;</span></span>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("control_group.tpl.html",'<div class="control-group">\n  <label ng-if="controlGroup.label" for="{{ controlGroup.labelFor }}" class="control-label">{{ controlGroup.label }}</label>\n  <div class="controls" ng-transclude>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("datepicker.tpl.html",'<div class="datepicker">\n  <a href="" ng-show="datepicker.text" ng-click="datepicker.clear()" class="clear" ng-class="{\'populated\': !!datepicker.text}">&times;</a>\n  <input type="text"\n         tabindex="{{datepicker.tabIndex}}"\n         placeholder="{{datepicker.placeholder}}"\n         ng-model="datepicker.text"\n         tab-key="datepicker.textChanged(true)"\n         enter-key="datepicker.textChanged(true, true)"\n         ng-blur="datepicker.textChanged(false)"\n         esc-key="datepicker.revert()"\n         ng-focus="datepicker.gotFocus()"\n         ng-class="{\'populated\': !!datepicker.text, \'invalid\': datepicker.textInvalid}"/>\n  <datepicker-calendar is-visible="datepicker.calendarVisible" current="model" select="datepicker.select($date)" start-of-week="::datepicker.startOfWeek" utc="::datepicker.utc"></datepicker-calendar>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("direction_pad.tpl.html",'<div class="direction-pad">\n  <button type="button" class="btn up" ng-click="directionPad.up()" title="Up"><img src="img/direction_up.png"></button>\n  <button type="button" class="btn left" ng-click="directionPad.left()" title="Left"><img src="img/direction_left.png"></button>\n  <button type="button" class="btn right" ng-click="directionPad.right()" title="Right"><img src="img/direction_right.png"></button>\n  <button type="button" class="btn down" ng-click="directionPad.down()" title="Down"><img src="img/direction_down.png"></button>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("dropdown.tpl.html",'<div class="dropdown" ng-class="{\'open\': open}">\n  <a href="" ng-click="toggle()" class="dropdown-toggle">\x3c!--\n    --\x3e<span class="dropdown-text" ng-hide="iconClass"><span class="tri" ng-show="!subtle">&#x25be; </span>{{ text }}<span class="tri" ng-show="subtle"> &#x25be;</span></span>\x3c!--\n    --\x3e<i ng-show="iconClass" class="{{ iconClass}}"></i>\x3c!--\n  --\x3e</a>\n  <ul class="dropdown-menu {{align}}" ng-transclude ng-if="open">\n  </ul>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("duration_input.tpl.html",'<div class="duration-input">\n  <input class="input-small" type="number" min="0" ng-model="durationInput.duration.parts.days" /> days\n  <input class="input-small" type="number" min="0" ng-model="durationInput.duration.parts.hours" /> hours\n  <input class="input-small" type="number" min="0" ng-model="durationInput.duration.parts.minutes" /> minutes\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("duration_text_input.tpl.html",'<div class="duration-text-input">\n  <input class="input-small" type="number" min="0" autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n         ng-change="durationTextInput.updateDuration()" ng-model="durationTextInput.durationData.parts.days" /> days\n  <input class="input-small" type="number" min="0" autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n         ng-change="durationTextInput.updateDuration()" ng-model="durationTextInput.durationData.parts.hours" /> hours\n  <input class="input-small" type="number" min="0" autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n         ng-change="durationTextInput.updateDuration()" ng-model="durationTextInput.durationData.parts.minutes" /> minutes\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("error_box.tpl.html",'<div class="error-box" ng-show="!busy.isBusy && busy.error">\n  <h3 close="errorBox.suppress()"></h3>\n  <h3>Could not {{ busy.activity }}</h3>\n  <p>{{ busy.error }}</p>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("filter_editor.tpl.html",'<div class="filter-editor">\n  <input type="text" ng-model="filterEditor.userInput" class="input-xxlarge" ng-blur="filterEditor.update()" autocomplete="off"/>\n  <loading while="filterEditor.parsing.isBusy">\n    <span ng-hide="filterEditor.lastParseResult && filterEditor.lastParseResult.MatchedAsText">&hellip;</span>\n    <syntax-hint ng-show="filterEditor.lastParseResult && filterEditor.lastParseResult.MatchedAsText"\n                 strict-result="filterEditor.lastParseResult"></syntax-hint>\n  </loading>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("frequency_histogram.tpl.html",'<div class="frequency-histogram">\n  <div class="bar-area">\n    <div class="bars">\n      <div class="bar" ng-repeat="bar in frequencyHistogram.bars track by bar.id" ng-style="{\'width\': frequencyHistogram.barWidth}">\n        <div class="fill" ng-style="{\'height\': bar.barHeight}"\n             title="{{bar.title}}"\n             ng-click="frequencyHistogram.pointClicked(bar.point)"><div class="bar-count" ng-show="bar.count != 0">{{ bar.count }}</div></div>\n      </div>\n    </div>\x3c!--\n    --\x3e<div class="vaxis">\n      <div class="label">{{frequencyHistogram.vmax}}</div>\n    </div>\n  </div>\n  <div class="haxis">\n    <div class="tick" ng-repeat="bar in frequencyHistogram.bars track by bar.tick" ng-style="{\'width\': frequencyHistogram.barWidth}">\n      <span class="label" ng-show="bar.label != \'\'">{{bar.label}}</span>\n    </div>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("inplace_editor.tpl.html",'<div class="inplace-editor">\n  <div class="readonly" ng-click="inplaceEditor.begin()" ng-transclude ng-hide="inplaceEditor.editing"></div>\n  <form class="editor {{inplaceEditor.inputClass}}" ng-submit="inplaceEditor.commit()" ng-if="inplaceEditor.editing">\n    <loading while="inplaceEditor.committing.isBusy" loading-class="loading-enclosure" spinner-class="loading-spinner">\n      <input type="text" ng-model="inplaceEditor.editedValue" />\x3c!--\n   --\x3e<button class="btn btn-success ok" type="submit">OK</button>\x3c!--\n   --\x3e<button class="btn cancel" type="button" ng-click="inplaceEditor.cancel()">&times;</button>\n    </loading>\n  </form>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("level_indicator.tpl.html",'<span class="level-indicator" ng-class="::levelClass" title="{{ ::level }}"></span>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("loading.tpl.html",'<div class="loading {{::loadingClass}}">\n  <div ng-show="!complete" class="spinner {{::spinnerClass}}"><div class="spinner-icon"></div></div>\n  <div class="complete" ng-show="complete" ng-transclude></div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("modal.tpl.html",'<div class="modal" ng-show="isVisible" ng-class="{\'form-dialog\': dialogStyle == \'form\'}">\n  <div ng-transclude></div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("query_errors.tpl.html",'<div class="query-errors" ng-show="!dataSet.loading.isBusy && dataSet.loading.error">\n  <h3>{{ dataSet.loading.error }}</h3>\n  <ul>\n    <li ng-repeat="reason in dataSet.reasons track by $index">{{reason}}</li>\n  </ul>\n  <p class="suggestion" ng-show="dataSet.suggestion"><a href="" ng-click="queryErrors.acceptSuggestion()">Did you mean: <code>{{dataSet.suggestion}}</code>?</a></p>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("raw_editor.tpl.html",'<div>\n  <modal is-visible="isVisible">\n    <div class="raw-editor">\n      <h2>Edit as JSON</h2>\n      <p>Make changes by editing or replacing the JSON below.</p>\n      <div class="editor-body">\n        <textarea class="input raw fill"></textarea>\n      </div>\n      <div class="actions">\n        <button type="button" class="btn btn-primary" ng-click="rawEditor.done()">Done</button>\n        <button type="button" class="btn" ng-click="rawEditor.cancel()">Cancel</button>\n      </div>\n    </div>\n  </modal>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("server_status_indicator.tpl.html",'<span class="server-status-indicator" href="" ng-click="serverStatusIndicator.show()" ng-class="serverStatusIndicator.level.toLowerCase()">\n  &nbsp;\n  <modal is-visible="serverStatusIndicator.isModal">\n    <div class="add-signal">\n      <a class="close" href="" ng-click="serverStatusIndicator.hide(); $event.stopPropagation();">&times;</a>\n      <h2>Server Status</h2>\n      <p ng-repeat="item in serverStatusIndicator.messages track by $index">{{item.Message}}</p>\n    </div>\n  </modal>\n</span>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("signal_expression_editor.tpl.html",'<div class="signal-expression-editor" ng-class="{\'read-only\': signalExpressionEditor.readOnly, \'empty\': signalExpressionEditor.state.isEmpty}">\n  <loading while="signalExpressionEditor.loading.isBusy">\n    <ul class="intersection">\n      <li ng-repeat="intersected in signalExpressionEditor.state.intersection track by $index">\n        <ul class="union">\n          <li ng-repeat="signalId in intersected.union track by signalId"\n              ng-class="{\'first\': $first, \'last\': $last, \'odd\': $odd, \'missing\': signalExpressionEditor.isMissing(signalId)}">\x3c!--\n         --\x3e{{signalExpressionEditor.signalName(signalId)}}&nbsp;<a href="" class="remove" ng-click="signalExpressionEditor.removeSignal(signalId)">&times;</a>\x3c!--\n       --\x3e</li>\n        </ul>\x3c!--\n     --\x3e<code ng-class="{\'last\': $last }">in</code>\x3c!--\n   --\x3e</li>\x3c!--\n   --\x3e<li>\n        <span class="all-events">All events</span>\n        <select\n            ng-model="signalExpressionEditor.nextSignal"\n            ng-options="signal.Id as signal.Title for signal in signalExpressionEditor.signals | filter:signalExpressionEditor.notReferencedFilter | orderBy:\'Title\'"\n            ng-change="signalExpressionEditor.addSignal(signalExpressionEditor.nextSignal)">\n          <option ng-value="null"></option>\n        </select>\n      </li>\n    </ul>\n  </loading>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("signal_picker.tpl.html",'<div class="signal-picker">\n  <loading while="signalPicker.loading.isBusy">\n    <ul class="selected">\n      <li ng-repeat="signalId in signalPicker.signalIds track by signalId">\x3c!--\n     --\x3e<span class="picked-signal">{{signalPicker.signalName(signalId)}}&nbsp;<a href="" class="remove" ng-click="signalPicker.removeSignal(signalId)">&times;</a></span>\x3c!--\n     --\x3e<code ng-class="{\'last\': $last }"> </code>\x3c!--\n   --\x3e</li>\x3c!--\n   --\x3e<li>\n        <select\n            ng-model="signalPicker.nextSignal"\n            ng-options="signal.Id as signal.Title for signal in signalPicker.signals | filter:signalPicker.notPickedFilter | orderBy:\'Title\'"\n            ng-change="signalPicker.addSignal(signalPicker.nextSignal)">\n          <option ng-value="null"></option>\n        </select>\n      </li>\n    </ul>\n  </loading>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("syntax_hint.tpl.html",'<div class="syntax-hint" ng-class="{\'is-text\': syntaxHint.isText }">\n  <a href="" ng-click="syntaxHint.showMessage = !syntaxHint.showMessage" class="matched-as-text" title="Searching for plain text. {{ syntaxHint.message }}">Text</a>\n  <span ng-show="syntaxHint.showMessage" class="message">Searching for plain text. {{ syntaxHint.message }}</span>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("dashboards.tpl.html",'<div class="dashboards" ng-class="{\'list-expanded\': dashboards.listExpanded}">\n  <error-box for="::dashboards.loadingDashboards"></error-box>\n  <loading while="dashboards.loadingDashboards.isBusy" spinner-class="all-dashboards">\n    <div class="dashboard-list-container" ng-click="dashboards.showList(); $event.stopPropagation();">\n      <div class="show-hide-toggle" ng-click="dashboards.showHideList(); $event.stopPropagation();"></div>\n      <dashboard-list items="::dashboards.model.all" active="dashboards.model.active.dashboard"\n                      on-activate="dashboards.tryActivate($dashboard)" on-add="dashboards.tryAdd()"></dashboard-list>\n    </div>\n    <div class="dashboards-content">\n      <p class="empty-message" ng-show="dashboards.model.all.length == 0">\n        You don\'t have any dashboards. Create your first dashboard with the <kbd>+</kbd> button above.\n      </p>\n      <p class="empty-message" ng-show="!dashboards.model.active">\n        Select a dashboard from the list on the left side of the page.\n      </p>\n      <dashboard model="dashboards.model.active" ng-if="dashboards.model.active" dashboards="dashboards"></dashboard>\n    </div>\n  </loading>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("events.tpl.html",'<div class="events"\n     ng-class="{\'timeline-visible\': events.layout.timelineVisible, \'query\': events.layout.query, \'max\': events.layout.minSignalBar, \'multiline\': events.layout.multiline}">\n  <signal-bar events-layout="::events.layout"\n              events-control="::events.control"\n              stream-slice="::events.slice"\n              signal-editor="::events.editor"\n              query-editor="::events.queryEditor"\n              tag-allocator="::events.tagAllocator"\n              filter-cache="::events.filters"></signal-bar>\n  <filter-bar events-layout="::events.layout"\n              stream-slice="::events.slice"\n              events-control="::events.control"\n              signal-editor="::events.editor"\n              current-event-set="events.eventSet"\n              current-data-set="events.dataSet"\n              filter-cache="::events.filters"></filter-bar>\n  <timeline event-set="events.eventSet"\n            layout="::events.layout"\n            stream-slice="::events.slice"\n            events-control="::events.control"\n            time-prefs="::events.timePrefs"></timeline>\n  <stream-view ng-if="!events.layout.query"\n               event-set="events.eventSet"\n               events-control="::events.control"\n               refreshing="::events.refreshing"\n               tag-allocator="::events.tagAllocator"\n               signal-editor="::events.editor"\n               time-prefs="::events.timePrefs"></stream-view>\n  <data-data-view ng-if="events.layout.query"\n                  data-data-set="events.dataSet"\n                  events-layout="::events.layout"\n                  events-control="::events.control"\n                  time-prefs="::events.timePrefs"></data-data-view>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("login.tpl.html",'<div class="login">\n  <form ng-submit="login.go()" ng-hide="login.settings.isAzureAD">\n    <control-group>\n      <p ng-show="login.settings.alternateAuthenticationUrl">\n        Log in with <a href="" ng-href="{{login.settings.alternateAuthenticationUrl}}">{{login.settings.alternateAuthenticationName}}</a>\n      </p>\n      <div class="error-box" ng-show="login.providerError">\n        <h3>{{ login.providerError }}</h3>\n        <p>{{ login.providerErrorDescription }}</p>\n      </div>\n    </control-group>\n\n    <hr class="or" ng-show="login.settings.alternateAuthenticationUrl">\n\n    <control-group ng-if="!login.settings.isActiveDirectory" label="Username">\n      <input type="text" class="input-large" ng-model="login.credentials.Username" />\n    </control-group>\n\n    <control-group ng-if="login.settings.isActiveDirectory" label="Username">\n      <input type="text" class="input-large" ng-model="login.credentials.Username" placeholder="DOMAIN\\user"/>\n    </control-group>\n\n    <control-group label="Password">\n      <input type="password" class="input-large" ng-model="login.credentials.Password" />\n    </control-group>\n\n    <div ng-show="login.changingPassword">\n      <control-group>\n        <div class="alert alert-info">\n          <p>A password change is required. Please provide a new password.</p>\n        </div>\n      </control-group>\n\n      <control-group label="New password">\n        <input type="password" ng-model="login.credentials.NewPassword" />\n      </control-group>\n\n      <control-group label="Repeat new password">\n        <input type="password" ng-model="login.newPasswordRepeat" />\n        <span ng-hide="login.credentials.NewPassword == login.newPasswordRepeat"><em>The passwords don\'t match</em></span>\n      </control-group>\n    </div>\n\n    <control-group>\n      <error-box for="login.loggingIn"></error-box>\n      <button type="submit" class="btn btn-success" ng-disabled="login.loggingIn.isBusy || login.credentials.Username == \'\' || login.credentials.Password == \'\' || (login.changingPassword && (login.credentials.NewPassword != login.newPasswordRepeat || login.credentials.NewPassword == \'\'))">Log in</button>\n      <button type="button" class="btn" ng-show="login.changingPassword" ng-click="login.cancel()" >Cancel</button>\n    </control-group>\n  </form>\n\n  <form ng-show="login.settings.isAzureAD">\n    <control-group>\n      <div class="error-box" ng-show="login.providerError">\n        <h3>{{ login.providerError }}</h3>\n        <p>{{ login.providerErrorDescription }}</p>\n      </div>\n\n      <a class="btn btn-success" href="" ng-href="{{login.settings.azureADAuthenticationUrl}}">Log in Using Azure AD</a>\n      <p class="inline-help">Log in using your organizational account.</p>\n    </control-group>\n  </form>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("datepicker_calendar.tpl.html",'<div class="datepicker-calendar right" ng-class="{\'open\': isVisible}">\n  <div class="container"></div>\n  <input class="invisible" />\n  <div class="extended-select">\n    <a class="select-now" href="" ng-click="datepickerCalendar.selectNow()">Now</a>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("divider_item.tpl.html",'<li class="divider-item"></li>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("confirm_dialog.tpl.html",'<div class="confirm-dialog">\n  <modal is-visible="confirmDialog.isVisible" on-cancel="confirmDialog.cancel()">\n    <h2>Confirm</h2>\n    <p>{{ confirmDialog.message }}</p>\n    <div class="actions">\n      <button type="button" class="btn btn-primary" ng-click="confirmDialog.ok()">OK</button>\n      <button type="button" class="btn" ng-click="confirmDialog.cancel()">Cancel</button>\n    </div>\n  </modal>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("toaster_blind.tpl.html",'<div class="toaster-blind" ng-show="toasterBlind.show">\n  <div class="toast toast-level-{{toasterBlind.level}}">{{toasterBlind.message}}</div>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("alert_editor_dialog.tpl.html",'<div class="alert-editor-dialog">\n  <modal is-visible="alertEditorDialog.isVisible" on-cancel="alertEditorDialog.cancel()" dialog-style="form">\n    <a class="close" href="" ng-click="alertEditorDialog.cancel()">&times;</a>\n    <h2 class="form-dialog-header">Alert <span class="subtitle">Trigger a notification when chart values match a condition</span></h2>\n    <loading while="alertEditorDialog.loading.isBusy">\n      <div ng-show="alertEditorDialog.appInstances.length == 0" class="alert alert-error">\n        <h3>A Seq app instance is required for this feature</h3>\n        <p>App instances are used for notification targets like email, team chat tools and issue trackers.</p>\n        <p ng-show="alertEditorDialog.userIsAdmin">To create an app instance, visit the <a href="#/settings/apps">Apps screen</a>.</p>\n        <p ng-hide="alertEditorDialog.userIsAdmin">Contact the administrator of your Seq server to configure this feature.</p>\n      </div>\n      <div tidy-scroller="alertEditor.notificationAppInstance.invocationOverridableSettingDefinitions" ng-hide="alertEditorDialog.appInstances.length == 0">\n        <alert-editor alert-data="alertEditorDialog.alertData"\n                      query="alertEditorDialog.alert.query"\n                      app-instances="alertEditorDialog.appInstances"\n                      on-change="alertEditorDialog.dataChanged()"></alert-editor>\n        <control-group>\n          <button type="button" class="btn btn-success" ng-click="alertEditorDialog.update()"\n                  ng-disabled="!alertEditorDialog.canUpdate">{{alertEditorDialog.isNew ? \'Add\' : \'Update\'}}</button>\n          <button type="button" class="btn" ng-class="{\'btn-warning\': !alertEditorDialog.isNew}"\n                  ng-click="alertEditorDialog.remove()">{{alertEditorDialog.isNew ? \'Cancel\' : \'Remove\'}}</button>\n        </control-group>\n      </div>\n    </loading>\n  </modal>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("chart.tpl.html",'<div class="chart-component {{chart.layoutClass}}" ng-class="{\'editing\': chart.editing}">\n  <div class="chart-controls">\n    <img ng-src="{{chart.editing ? \'img/collapse-chart.svg\' : \'img/expand-chart.svg\'}}"\n         class="img-btn" title="Expand/collapse" ng-click="chart.toggleEditor()" alt="Expand/collapse chart editor" />\n  </div>\n  <div class="has-alerts-indicator" ng-show="chart.model.hasActiveAlerts()" title="Alerts are active" ng-click="chart.showAlertsEditor()"></div>\n  <h3 ng-class="{\'empty\': !chart.model.chart.Title}"><inplace-editor\n      model="chart.model.chart.Title"\n      initially-editing="::chart.model.chart.Title == null"\n      input-class="title-editor"\n      commit="chart.model.updateTitle($value)">{{ chart.model.chart.Title }}</inplace-editor></h3>\n\n  <loading while="!chart.isInSync() && !chart.refreshing.error" loading-class="chart-mount-loading" spinner-class="chart-mount-loading">\n    <div class="overlay" ng-class="{\'drawing\': chart.isDrawing, \'no-data\': chart.overlay.value == null}"\n         ng-show="chart.overlay && !chart.refreshing.error"\n         ng-style="{\'color\': chart.overlay.color}">{{chart.overlay.value}}</div>\n    <div class="trace-name-tooltip" ng-show="chart.traceNameTooltip != null">{{chart.traceNameTooltip}}</div>\n    <div ng-hide="!chart.showPlot || (!chart.refreshing.isBusy && chart.refreshing.error)" class="chart-mount"\n         ng-class="{\'drawing\': chart.isDrawing}" id="{{chart.plotlyMountElementId}}"></div>\n\n    <div ng-show="!chart.refreshing.isBusy && chart.refreshing.error" class="chart-query-errors">\n      <h3>{{ chart.refreshing.error }}</h3>\n      <ul>\n        <li ng-repeat="reason in chart.errorReasons track by $index">{{reason}}</li>\n      </ul>\n    </div>\n  </loading>\n\n  <div class="editor-area" ng-if="chart.editing">\n    <chart-editor model="chart.model" update-layout="chart.updateLayout(refresh)" current-range="chart.lastRange"></chart-editor>\n  </div>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("chart_editor.tpl.html",'<div class="chart-editor">\n  <ul class="tabs">\n    <li ng-repeat="tab in chartEditor.tabs track by tab.title"\n        ng-class="{\'active\': tab.isActive}"><a href="" ng-click="chartEditor.activate(tab)">{{tab.title}}</a></li>\n  </ul>\n  <div class="tab-container" tidy-scroller="chartEditor.activeTab">\n    <div class="tab-content signal form-page" ng-show="chartEditor.isActive(\'signal\')">\n      <form ng-submit="">\n        <control-group>\n          <signal-expression-editor expression="chartEditor.model.chart.SignalExpression" on-change="chartEditor.changed()"></signal-expression-editor>\n          <p class="inline-help">Choose which events contribute to the chart. When multiple signals are specified,\n            only events that match all of them will be included.</p>\n        </control-group>\n      </form>\n    </div>\n    <div class="tab-content form-page compact" ng-show="chartEditor.isActive(\'query\')">\n      <chart-query-editor query="chartEditor.queryModel.chartQuery" on-change="chartEditor.changed()"></chart-query-editor>\n    </div>\n    <div class="tab-content sql" ng-show="chartEditor.isActive(\'sql\')">\n      <div class="source wrap"><a href="" ng-href="{{chartEditor.openInEventsURI()}}">{{chartEditor.exampleSql()}}</a></div>\n    </div>\n    <div class="tab-content style compact" ng-show="chartEditor.isActive(\'style\')">\n      <chart-style-editor display-style="chartEditor.queryModel.chartQuery.DisplayStyle" on-change="chartEditor.layoutChanged(refresh)"></chart-style-editor>\n    </div>\n    <div class="tab-content alerts" ng-show="chartEditor.isActive(\'alerts\')">\n      <alerts-editor query="chartEditor.queryModel" on-change="chartEditor.layoutChanged()"></alerts-editor>\n    </div>\n    <div class="tab-content actions compact form-page" ng-show="chartEditor.isActive(\'actions\')">\n      <div class="move-arrows">\n        <direction-pad up="chartEditor.move(-2)" left="chartEditor.move(-1)" right="chartEditor.move(1)" down="chartEditor.move(2)"></direction-pad>\n      </div>\n      <form ng-submit="">\n        <control-group label="Width">\n          <input type="number" class="input chart-editor-input input-xsmall" min="3" max="12"\n                 autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n                 ng-model="chartEditor.model.chart.DisplayStyle.WidthColumns" blur-on-enter\n                 ng-change="chartEditor.layoutChanged()"> columns\n        </control-group>\n        <control-group label="Height">\n          <input type="number" class="input chart-editor-input input-xsmall" min="1" max="4"\n                 autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n                 ng-model="chartEditor.model.chart.DisplayStyle.HeightRows" blur-on-enter\n                 ng-change="chartEditor.layoutChanged()"> rows\n          <p class="inline-help">The dashboard is laid out in 12-column rows.</p>\n        </control-group>\n        <control-group>\n          <button type="button" class="btn" ng-click="chartEditor.duplicate()">Duplicate</button>\n          <button type="button" class="btn btn-warning remove" ng-click="chartEditor.remove()">Remove</button>\n        </control-group>\n      </form>\n    </div>\n  </div>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){
e.put("dashboard.tpl.html",'<div class="dashboard" ng-class="{\'maximized\': dashboard.maximized}">\n  <raw-editor is-visible="dashboard.editingJSON" data="dashboard.model.dashboard" edited="dashboard.editedJSON($data)"></raw-editor>\n  <div class="dashboard-range-controls">\n    <range-controls></range-controls>\n  </div>\n  <div class="title-area">\n    <h2><inplace-editor\n        model="dashboard.model.dashboard.Title"\n        input-class="title-editor"\n        commit="dashboard.model.updateTitle($value)">{{ dashboard.model.dashboard.Title }}<span ng-show="dashboard.model.dirty"> *</span></inplace-editor></h2>\n    <div class="controls">\n      <loading while="dashboard.saving.isBusy">\n        <img src="img/dashboard-maximize.png" class="img-btn maximize" title="Maximize" ng-click="dashboard.toggleMaximized()" alt="Maximize dashboard" />\n        <img src="img/dashboard-restore.png" class="img-btn restore" title="Restore" ng-click="dashboard.toggleMaximized()" alt="Restore dashboard" />\n        <img ng-src="img/dashboard-filter-{{dashboard.showSignalsList ? \'up\' : \'down\'}}-{{dashboard.model.dashboard.SignalExpression ? \'on\' : \'off\'}}.png" class="img-btn filter" title="Filter" ng-click="dashboard.toggleSignalsList()" alt="Filter" />\n        <img src="img/dashboard-save.png" class="img-btn" title="Save" ng-class="{\'disabled\': !dashboard.model.dirty}" ng-click="dashboard.save()" alt="Save current dashboard" />\n        <img src="img/dashboard-undo.png" class="img-btn" title="Discard changes" ng-class="{\'disabled\': !dashboard.model.dirty || !dashboard.model.dashboard.Id}" ng-click="dashboard.discardChanges()" alt="Discard changes to the current dashboard" />\n        <dropdown align="right">\n          <action-item action="dashboard.editAsJSON()">Edit as JSON</action-item>\n          <action-item action="dashboard.toggleShared()" disabled="!dashboard.user.IsAdministrator"><checkmark checked="!dashboard.model.dashboard.OwnerId"></checkmark> Shared</action-item>\n          <action-item action="dashboard.switchToClone()" disabled="!dashboard.model.dashboard.Id">Switch to Clone</action-item>\n          <divider-item></divider-item>\n          <action-item action="dashboard.del()">Delete</action-item>\n        </dropdown>\n      </loading>\n    </div>\n  </div>\n\n  <div class="dashboard-content" tidy-scroller="dashboard.model.charts">\n    <div class="dashboard-intersected-signals" ng-show="dashboard.showSignalsList">\n      <signal-expression-editor expression="dashboard.model.dashboard.SignalExpression" on-change="dashboard.model.isDirty()"></signal-expression-editor>\n    </div>\n    <error-box for="dashboard.saving"></error-box>\n    <chart ng-repeat="chart in dashboard.model.charts track by (chart.chart.Id || chart.sequenceNumber)" model="chart"\n           on-editing="dashboard.onEditing($chart)"\n           layout-class="col-{{chart.chart.DisplayStyle.WidthColumns}} row-{{chart.chart.DisplayStyle.HeightRows}}"></chart>\n    <a href="" class="add-chart-button" ng-click="dashboard.addChart()">\n      <i>Add chart</i>\n    </a>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("dashboard_list.tpl.html",'<div class="dashboard-list">\n  <div class="scrollable-area" tidy-scroller="dashboardList.items">\n    <h3 class="subhead">\n      <a class="add-list-item" href="" ng-click="dashboardList.addDashboard()"><i class="icon-add-item">Create</i></a>\n      <a href="" ng-click="dashboardList.addDashboard()">Dashboards</a>\n    </h3>\n    <loading until="dashboardList.items" spinner-class="dashboard-list-data">\n      <ul class="list-items right">\n        <li ng-repeat="item in dashboardList.items | orderBy:\'Title\' track by (item.Id || $index)"\n            class="list-item"\n            ng-class="{\'active\': item == dashboardList.active, \'shared\': !item.OwnerId }">\n          <a href="" class="item-title" ng-click="dashboardList.activate(item)">{{ item.Title }}</a>\n        </li>\n      </ul>\n    </loading>\n  </div>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("labeled_term_input.tpl.html",'<div class="labeled-term-input">\n  <div class="labeled-term" ng-repeat="term in labeledTermInput.model track by $index">\n  <input type="text" class="input input-xlarge source term"\n         autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n         ng-model="term.Value" blur-on-enter\n         ng-change="labeledTermInput.inputChanged($index)">\x3c!--\n  --\x3e<div class="as">as</div>\x3c!--\n  --\x3e<input type="text" class="input input-xlarge source term-label"\n            autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n            ng-model="term.Label" blur-on-enter\n            ng-change="labeledTermInput.inputChanged($index)">\x3c!--\n  --\x3e</div><button type="button" class="btn add-term-button"\n             ng-click="labeledTermInput.addTerm()"><img src="img/dashboard-add-chart.png" alt="Add"></button>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("range_controls.tpl.html",'<div class="range-controls">\n  <div class="displayed-range"><range-picker duration-options="::rangeControls.durationOptions" active-duration="rangeControls.activeDuration"\n                                             grouping-options="::rangeControls.groupingOptions" active-grouping="rangeControls.activeGrouping"\n                                             on-change="rangeControls.setRangeDuration($option)"></range-picker></div>\n  <div class="refresh-rate"><dropdown subtle text="Refresh {{rangeControls.refreshRateDescription}}" align="right">\n    <action-item ng-repeat="rate in rangeControls.refreshRateOptions track by $index"\n                 action="rangeControls.setRefreshRate(rate)">Refresh {{rate.description}}</action-item>\n  </dropdown></div>\n  <div class="refresh-group">\n    <a title="Refresh" href="" ng-click="rangeControls.refreshOrStop()"\n'+"       class=\"refresh state-{{rangeControls.fetching.isBusy ? 'busy' : 'idle'}}\"><i class=\"icon-state icon-state-{{rangeControls.fetching.isBusy ? 'busy' : 'idle'}}\">Refresh</i></a>\n  </div>\n</div>\n")}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("term_input.tpl.html",'<div class="term-input">\n  <input ng-repeat="term in termInput.model track by $index"\n         type="text" class="input input-xlarge source term"\n         autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n         ng-model="termInput.model[$index]" blur-on-enter\n         ng-change="termInput.inputChanged($index)">\x3c!--\n  --\x3e<button type="button" class="btn add-term-button"\n             ng-click="termInput.addTerm()"><img src="img/dashboard-add-chart.png" alt="Add"></button>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("data_view.tpl.html",'<div class="data-view">\n  <div class="content" tidy-scroller="dataSet.slices" ng-class="{\'scrollable\': showAs == \'table\'}">\n    <license-status></license-status>\n    <loading while="dataSet.loading.isBusy">\n      <query-errors data-data-set="dataSet" events-control="::eventsControl"></query-errors>\n      <as-table\n        ng-if="eventsLayout.selectedView == \'table\'"\n        data-data-set="dataSet"\n        time-prefs="::timePrefs"></as-table>\n      <as-timeseries\n        ng-if="eventsLayout.selectedView == \'timeseries\'"\n        events-layout="::eventsLayout"\n        data-data-set="dataSet"></as-timeseries>\n      <as-bar\n        ng-if="eventsLayout.selectedView == \'bar\'"\n        events-layout="::eventsLayout"\n        data-data-set="dataSet"></as-bar>\n      <as-pie\n        ng-if="eventsLayout.selectedView == \'pie\'"\n        events-layout="::eventsLayout"\n        data-data-set="dataSet"></as-pie>\n    </loading>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("event.tpl.html",'<div class="event {{event.levelClass}}" ng-class="{\'collapsed\': event.collapsed, \'expanded\': !event.collapsed }">\n  <div class="timestamp" ng-click="event.toggle()">\n    <event-timestamp value="::event.model.Timestamp" time-prefs="::event.timePrefs"></event-timestamp>\n  </div>\n  <div class="description">\n    <div class="message" ng-click="event.toggle()">\n      <level-indicator level="::event.model.Level"></level-indicator>\n      <tagged-properties tag-allocator="::tagAllocator" properties="::event.model.Properties"></tagged-properties>\n      <rendered-message template="::event.model.MessageTemplateTokens" properties="::event.model.Properties"></rendered-message>\n    </div>\n    <div ng-if="event && !event.collapsed">\n      <event-actions model="::event.model" events-control="::eventsControl"></event-actions>\n      <event-properties model="::event.model" events-control="::eventsControl" tag-allocator="::tagAllocator" signal-editor="::signalEditor"></event-properties>\n      <p class="exception" ng-if="event.model.Exception">{{ ::event.model.Exception }}</p>\n    </div>\n  </div>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("filter_bar.tpl.html",'<div class="filter-bar" ng-class="{\'max\': eventsLayout.minSignalBar}">\n  <form class="content" ng-submit="filterBar.refresh()" autocomplete="off">\n    <div class="inset-controls">\n      <a href="" ng-show="filterBar.filter != \'\'" ng-click="filterBar.clear()" class="clear">&times;</a>\x3c!--\n   --\x3e<dropdown align="right" ng-hide="filterBar.pinnedHistory.length == 0 && (filterBar.history.length == 0 || filterBar.history.length == 1 && filterBar.history[0] == filterBar.filter)" class="history">\n        <action-item ng-hide="prev == filterBar.filter" ng-repeat="prev in filterBar.history" title="{{prev}}" action="filterBar.selectHistory(prev)">\n          <div class="close" ng-click="filterBar.forgetHistory(prev, $event)">&times;</div>\n          <div class="pin-history" ng-click="filterBar.pinHistory(prev, $event)"></div>\n          {{prev}}\n        </action-item>\n        <divider-item ng-show="filterBar.pinnedHistory.length != 0"></divider-item>\n        <action-item ng-repeat="prev in filterBar.pinnedHistory" title="{{prev}}" action="filterBar.selectHistory(prev)">\n          <div class="close" ng-click="filterBar.forgetHistory(prev, $event)">&times;</div>\n          {{prev}}\n        </action-item>\n      </dropdown>\n    </div>\n    <a title="Add the current filter to a Signal" href="" ng-click="filterBar.moveToSignal()" class="move-to-signal" ng-class="{disabled: filterBar.filter == \'\' || filterBar.syntax == \'QUERY\'}"><i class="icon-move-to-signal">Move to Signal</i></a>\n    <div class="refresh-group" ng-class="{\'deletion-enabled\': filterBar.deletionEnabled}">\n      <a title="Refresh" href="" ng-click="filterBar.refreshOrStop()" class="refresh state-{{currentEventSet.state || currentDataSet.state || \'idle\'}}"><i class="icon-state icon-state-{{currentEventSet.state || currentDataSet.state || \'idle\'}}">Refresh</i></a>\x3c!--\n   --\x3e<a title="Auto-refresh" href="" ng-click="filterBar.autorefresh()" class="autorefresh state-{{currentEventSet.state || \'idle\'}}" ng-class="{disabled: filterBar.syntax == \'QUERY\'}"><i class="icon-state icon-state-{{currentEventSet.state || \'idle\'}}">Auto-refresh on</i></a>\x3c!--\n   --\x3e<a title="Add to dashboard" href="" ng-click="filterBar.chooseDashboard(); $event.stopPropagation();" class="addtodash"><i class="icon-state">Add to dashboard</i></a>\x3c!--\n   --\x3e<dropdown align="right" ng-disabled="currentEventSet.state == \'auto\'" class="state-{{currentEventSet.state || \'idle\'}}">\n        <action-item ng-show="!filterBar.deletionEnabled" action="filterBar.exportCsv()">Export as CSV</action-item>\n        <action-item ng-show="filterBar.deletionEnabled" action="filterBar.deleteMatching()">Delete matching events</action-item>\n        <action-item ng-show="filterBar.deletionEnabled" action="filterBar.cancelDeletion()">Cancel deletion</action-item>\n      </dropdown>\n      <dashboard-picker is-visible="filterBar.choosingDashboard" on-selected="filterBar.addToDash($dashboard)"></dashboard-picker>\n    </div>\n    <filter-box filter-state="::filterBar.filterState"\n                filter="filterBar.filter"\n                change="filterBar.updateSuggestions()"\n                keydown="filterBar.checkCompletion($event)"\n                submit="filterBar.refresh()"\n                events-layout="::eventsLayout"\n                syntax="filterBar.syntax"></filter-box>\n  </form>\n  <autocomplete ng-hide="filterBar.syntaxHintAvailable" suggestions="filterBar.suggestions" complete="filterBar.complete($opt)"></autocomplete>\n  <syntax-hint ng-show="filterBar.syntaxHintAvailable && filterBar.syntax != \'QUERY\'" strict-result="eventsControl.lastParseResult"></syntax-hint>\n  <span ng-show="filterBar.syntaxHintAvailable && filterBar.syntax == \'QUERY\'" class="syntax-sql" title="Using SQL syntax">SQL</span>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("signal_bar.tpl.html",'<div class="signal-bar" ng-class="{\'min\': signalBar.eventsLayout.minSignalBar, \'any\': signalBar.state.intersected.length || signalBar.signalEditor.open }"\n     ng-click="signalBar.showIfHidden()">\n  <div class="show-hide-toggle" ng-click="signalBar.showHide(); $event.stopPropagation();"></div>\n  <div class="scrollable-area" tidy-scroller="signalBar.state.state.signals">\n    <current-signal ng-class="{\'open\': signalBar.signalEditor.open}" editor="::signalBar.signalEditor" tag-allocator="::signalBar.tagAllocator"\n                    events-control="::signalBar.eventsControl" signal-bar="::signalBar.state" filter-cache="::signalBar.filterCache"></current-signal>\n    <current-query ng-class="{\'open\': signalBar.queryEditor.open}" editor="::signalBar.queryEditor" signal-bar="::signalBar.state"></current-query>\n    <signal-list signal-bar="::signalBar.state" tag-allocator="::signalBar.tagAllocator"></signal-list>\n    <query-list signal-bar="::signalBar.state"></query-list>\n    <footer></footer>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("stream_view.tpl.html",'<div class="stream-view" ng-class="{\'formatted-time\': streamView.timePrefs.ampm}">\n  <div class="content" tidy-scroller="eventSet.events" at-scroll-limit="streamView.showMore()">\n    <license-status></license-status>\n    <loading until="eventSet">\n      <div class="event-list" ng-class="{\'autorefreshing\': eventSet.state == \'auto\'}">\n        <event ng-repeat="event in eventSet.events track by event.Id"\n               time-prefs="::streamView.timePrefs"\n               animated-entry="entered"\n               events-control="::eventsControl"\n               model="::event" tag-allocator="::tagAllocator"\n               signal-editor="::signalEditor"></event>\n      </div>\n      <event-set-statistics refreshing="refreshing" event-set="eventSet" ng-hide="eventSet.loading.error"></event-set-statistics>\n      <error-box for="eventSet.loading"></error-box>\n    </loading>\n  </div>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("timeline.tpl.html",'<div class="timeline">\n  <div class="content-area">\n    <expander events-layout="::layout" stream-slice="::streamSlice" current-event-set="eventSet"></expander>\n    <div class="view-selectors">\n      <view-selector layout="::layout" view="table" img="table" caption="View as table"></view-selector>\x3c!--\n   --\x3e<view-selector layout="::layout" view="timeseries" img="line" caption="View as timeseries"></view-selector>\x3c!--\n   --\x3e<view-selector layout="::layout" view="bar" img="bar" caption="View as bar chart"></view-selector>\x3c!--\n   --\x3e<view-selector layout="::layout" view="pie" img="pie" caption="View as pie chart"></view-selector>\n    </div>\n    <div class="date-range">\n      <i class="calendar-icon"></i>\n      <datepicker placeholder="First" model="timeline.from" changed="timeline.applyRange($refresh)" ti="990" time-prefs="::timeline.timePrefs"></datepicker>\n      to\n      <datepicker placeholder="Now" model="timeline.to" changed="timeline.applyRange($refresh)" ti="991" time-prefs="::timeline.timePrefs"></datepicker>\n      <button type="button" class="timeline-clear" ng-disabled="!(timeline.from || timeline.to) || layout.query" ng-click="timeline.clear()"></button>\n    </div>\n    <div class="histogram">\n      <a class="page page-back" href="" ng-click="timeline.goBack()"></a>\n      <a class="page page-forward" href="" ng-click="timeline.goForward()"></a>\n      <loading while="timeline.updating.isBusy" spinner-class="histogram-spinner">\n        <frequency-histogram data="timeline.histogram"\n                             point-clicked="timeline.selectRange($point)"\n                             time-prefs="::timeline.timePrefs"\n                             ng-show="timeline.histogram"></frequency-histogram>\n        <error-box for="timeline.updating"></error-box>\n      </loading>\n    </div>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("diagnostics.tpl.html",'<settings-layout data-title="Diagnostics" class="diagnostics">\n  <p class="summary">This screen presents an overview of the Seq server\'s health and performance. Please contact <a href="https://getseq.net/Support">Seq Support</a>\n    if you need help managing this Seq installation.</p>\n\n  <error-box for="diagnosticsIndex.loading"></error-box>\n  <loading until="diagnosticsIndex.metrics">\n    <div class="summary">\n      <p>\n        <label class="checkbox"><input type="checkbox" ng-model="diagnosticsIndex.sendErrorReports" ng-change="diagnosticsIndex.settingsChange()" /> Automatically send internal error reports to Datalust</label>\n      </p>\n      <p class="inline-help" ng-hide="diagnosticsIndex.changingSettings || !diagnosticsIndex.replyEmail">\n        Including reply email address <strong>{{diagnosticsIndex.replyEmail}}</strong> (<a href="" ng-click="diagnosticsIndex.settingsChange()">change</a>).\n      </p>\n      <p ng-show="diagnosticsIndex.changingSettings" class="email-form-instructions">\n        If you would like Datalust to be able to contact you about error reports from your Seq instance, please provide a reply\n        email address:\n      </p>\n      <p ng-show="diagnosticsIndex.changingSettings" class="email-form-input">\n        <input type="text" class="input input-large" ng-model="diagnosticsIndex.replyEmail" spellcheck="false" />\n      </p>\n      <error-box for="diagnosticsIndex.saving"></error-box>\n      <button type="button"\n              ng-show="diagnosticsIndex.changingSettings"\n              ng-disabled="diagnosticsIndex.saving.isBusy"\n              class="btn btn-success"\n              ng-click="diagnosticsIndex.saveSettings()">Save changes</button>\n      <button type="button"\n              ng-show="diagnosticsIndex.changingSettings"\n              ng-disabled="diagnosticsIndex.saving.isBusy"\n              class="btn btn-warning"\n              ng-click="diagnosticsIndex.cancelSettingsChange()">Cancel</button>\n    </div>\n    <table class="metrics">\n      <colgroup>\n        <col class="metric-name">\n        <col>\n      </colgroup>\n      <thead>\n        <tr>\n          <th colspan="2">\n            <a class="btn btn-primary view-ingestion-log" href="" ng-href="{{diagnosticsIndex.ingestionLogUrl}}" target="_blank">Ingestion Log</a>\n            API Endpoint<br>\n              <span class="inline-help">Tracks incoming events at the Seq logging endpoint. <a href="#/settings/api-keys">API keys</a> can\n                be used to filter events as they arrive.</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Events arrived</th>\n          <td>{{ diagnosticsIndex.metrics.EndpointArrivalsPerMinute | longNumber }} <span class="measure">/minute</span></td>\n        </tr>\n        <tr>\n          <th>Events accepted</th>\n          <td>{{ diagnosticsIndex.metrics.EndpointInfluxPerMinute | longNumber }} <span class="measure">/minute</span></td>\n        </tr>\n        <tr>\n          <th>Ingested data</th>\n          <td>{{ diagnosticsIndex.metrics.EndpointIngestedBytesPerMinute | formatBytesSize }} <span class="measure">{{ diagnosticsIndex.metrics.EndpointIngestedBytesPerMinute | formatBytesUnits }}/minute</span></td>\n        </tr>\n        <tr ng-class="{\'warning\': diagnosticsIndex.metrics.EndpointInvalidPayloadsPerMinute != 0}">\n          <th>Invalid payloads</th>\n          <td>{{ diagnosticsIndex.metrics.EndpointInvalidPayloadsPerMinute | longNumber }} <span class="measure">/minute</span></td>\n        </tr>\n        <tr ng-class="{\'warning\': diagnosticsIndex.metrics.EndpointUnauthorizedPayloadsPerMinute != 0}">\n          <th>Unauthorized payloads</th>\n          <td>{{ diagnosticsIndex.metrics.EndpointUnauthorizedPayloadsPerMinute | longNumber }} <span class="measure">/minute</span></td>\n        </tr>\n      </tbody>\n      <thead>\n        <tr>\n          <th colspan="2">\n            Storage<br>\n            <span class="inline-help">The event store is arranged in seven-day extents in the disk archive.\n              Query <a href="" ng-href="{{diagnosticsIndex.queryCountsPerExtent}}">counts per extent</a>.</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>First extent start date</th>\n          <td>{{ diagnosticsIndex.metrics.EventStoreFirstExtentRangeStartUtc | date }} <span class="measure">UTC</span></td>\n        </tr>\n        <tr>\n          <th>Last extent end date</th>\n          <td>{{ diagnosticsIndex.metrics.EventStoreLastExtentRangeEndUtc | date }} <span class="measure">UTC</span></td>\n        </tr>\n        <tr ng-class="{\'warning\': diagnosticsIndex.metrics.EventStoreDiskRemainingBytes < 1000000000}">\n          <th>Remaining disk space</th>\n          <td>{{ diagnosticsIndex.metrics.EventStoreDiskRemainingBytes | formatBytesSize }} <span class="measure">{{ diagnosticsIndex.metrics.EventStoreDiskRemainingBytes | formatBytesUnits }}</span></td>\n        </tr>\n      </tbody>\n      <thead>\n      <tr>\n        <th colspan="2">\n          Event cache<br>\n          <span class="inline-help">Seq uses a RAM cache to accelerate querying of recent events.</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <th>Range in RAM</th>\n        <td>{{ diagnosticsIndex.metrics.EventStoreDaysCached | longNumber }} <span class="measure">days</span></td>\n      </tr>\n      <tr>\n        <th>Count in RAM</th>\n        <td>{{ diagnosticsIndex.metrics.EventStoreEventsCached | longNumber }} <span class="measure">events</span></td>\n      </tr>\n      </tbody>\n      <thead>\n        <tr>\n          <th colspan="2">\n            Query cache<br>\n            <span class="inline-help">Timeseries data is cached to accelerate charting performance.</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Queries executed</th>\n          <td>{{ diagnosticsIndex.metrics.QueriesPerMinute | longNumber }} <span class="measure">/minute</span></td>\n        </tr>\n        <tr>\n          <th>Time slice hits</th>\n          <td>{{ diagnosticsIndex.metrics.QueryCacheTimeSliceHitsPerMinute | longNumber }} <span class="measure">/minute</span></td>\n        </tr>\n        <tr>\n          <th>Invalidations</th>\n          <td>{{ diagnosticsIndex.metrics.QueryCacheInvalidationsPerMinute | longNumber }} <span class="measure">/minute</span></td>\n        </tr>\n      </tbody>\n      <thead>\n      <tr>\n        <th colspan="2">\n          Document store<br>\n          <span class="inline-help">Stores Seq\'s application data like users, signals, and API keys.</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <th>Active sessions</th>\n        <td>{{ diagnosticsIndex.metrics.DocumentStoreActiveSessions }}</td>\n      </tr>\n      </tbody>\n      <thead>\n        <tr>\n          <th colspan="2">\n            Process<br>\n            <span class="inline-help">The Seq server runs as a Windows service process.</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Uptime</th>\n          <td>{{ diagnosticsIndex.friendlyUptime }}</td>\n        </tr>\n        <tr>\n          <th>Working set</th>\n          <td>{{ diagnosticsIndex.metrics.ProcessWorkingSetBytes | formatBytesSize }} <span class="measure">{{ diagnosticsIndex.metrics.ProcessWorkingSetBytes | formatBytesUnits }}</span></td>\n        </tr>\n        <tr>\n          <th>Threads</th>\n          <td>{{ diagnosticsIndex.metrics.ProcessThreads | longNumber }}</td>\n        </tr>\n      </tbody>\n      <thead>\n      <tr>\n        <th colspan="2">\n          System<br>\n          <span class="inline-help">Details of the server machine.</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <th>System memory utilization</th>\n        <td>{{ diagnosticsIndex.metrics.SystemMemoryUtilization | percent }} <span class="measure">%</span></td>\n      </tr>\n      </tbody>\n      <thead>\n      <tr>\n        <th colspan="2">\n          Activity<br>\n          <span class="inline-help">Tasks currently running in the server are listed here.</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="task in diagnosticsIndex.metrics.RunningTasks">\n          <th>{{ task.Description }}</th>\n          <td><span class="measure">started</span> {{ task.StartedAtUtc | fromNow }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p class="summary"><a href="" ng-href="{{diagnosticsIndex.systemReportUrl}}" _target="_blank">Download a full diagnostic report.</a></p>\n\n  </loading>\n\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("settings_layout.tpl.html",'<div class="settings-layout">\n  <div class="title">\n    <h2>{{ settingsLayout.title }} <span class="subtitle">{{ settingsLayout.subtitle }}</span></h2>\n  </div>\n  <div class="content">\n    <ul class="tabs">\n      <li ng-repeat="tab in settingsLayout.tabs track by tab.title"\n          ng-class="{\'active\': tab.isActive }">\n        <a ng-href="#/settings/{{tab.slug}}" title="{{ tab.subtitle }}">{{ tab.title }}</a>\n      </li>\n    </ul>\n    <div class="page" tidy-scroller="[]">\n      <div ng-transclude></div>\n    </div>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("license.tpl.html",'<settings-layout data-title="License" class="license-index">\n  <p class="summary">Seq is provided subject to the terms in its <a href="doc/License.rtf" download="Seq-EULA.rtf">end-user license agreement</a>.</p>\n  <error-box for="licenseIndex.loading"></error-box>\n  <loading until="licenseIndex.license">\n    <div class="alert-warning" ng-show="!licenseIndex.license.IsValid">\n      <h5>License invalid</h5>\n      <p>You can purchase an appropriate license at <a class="external" target="_blank" href="http://getseq.net">getseq.net</a>,\n        or please contact <a class="external" href="mailto:sales@getseq.net">sales@getseq.net</a> if we can help in any way.</p>\n    </div>\n    <form method="post" action="https://getseq.net/renew">\n      <control-group label="Status">\n        <p class="summary">{{ licenseIndex.license.StatusDescription }}</p>\n        <div ng-show="!licenseIndex.license.IsValid">\n          <p ng-hide="licenseIndex.showDowngrade">\n            <a class="btn btn-primary" href="https://getseq.net/Pricing" target="_blank">Buy Now</a>\n            <a class="btn" href="" ng-click="licenseIndex.showDowngrade = true">Downgrade</a>\n          </p>\n          <div ng-show="licenseIndex.showDowngrade">\n            <p class="spaced">You can downgrade your Seq installation to the free <em>single-user</em> license if you no longer need its professional features:</p>\n            <ul class="spaced bulleted">\n              <li><strong>Authentication</strong> will be disabled, with all users automatically signed in as administrator</li>\n              <li><strong>User accounts and settings</strong> will no longer be available</li>\n              <li><strong>Seq will no longer serve events from an <strong>HTTPS</strong> URL, if one is in use</strong></li>\n            </ul>\n            <p class="spaced">Buying a license not only enables great features, but also helps us make Seq even more awesome <strong>:-)</strong></p>\n            <p class="spaced">\n              <button class="btn btn-danger" type="button" ng-click="licenseIndex.downgradeToFree()">Downgrade</button>\n              <button class="btn" type="button" ng-click="licenseIndex.showDowngrade = false">Cancel</button>\n            </p>\n          </div>\n        </div>\n      </control-group>\n\n      <control-group label="License text">\n        <textarea name="certificate" class="license-text" rows="13" ng-model="licenseIndex.license.LicenseText"\n                  placeholder="Serial: ..." spellcheck="false" ng-change="licenseIndex.certificateChanged()"></textarea>\n        <p class="inline-help">Paste the full license text block including the digital signature.</p>\n      </control-group>\n\n      <control-group>\n        <error-box for="licenseIndex.saving"></error-box>\n        <button type="button" class="btn btn-success" ng-disabled="licenseIndex.saving.isBusy || !licenseIndex.changed" ng-click="licenseIndex.saveLicense()">Save and validate</button>\n        <button type="submit" class="btn btn-success" ng-show="licenseIndex.canRenew" ng-disabled="licenseIndex.saving.isBusy || licenseIndex.changed">Renew online</button>\n      </control-group>\n    </form>\n\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){
e.put("theme_index.tpl.html",'<settings-layout data-title="Theme" class="theme-index">\n  <p class="summary">Apply customized styles to distinguish between multiple Seq instances.</p>\n  <error-box for="themeIndex.loading"></error-box>\n  <loading until="themeIndex.loaded">\n    <form ng-submit="themeIndex.saveTheme()">\n      <control-group label="Instance title">\n        <input class="input input-large" type="text" placeholder="{{themeIndex.instanceName}}" ng-model="themeIndex.instanceTitle" />\n        <p class="inline-help">A title that uniquely identifies this Seq instance. This will be displayed in the navigation bar\n        and in the browser window title. The Seq instance name, if any, will be used by default.</p>\n      </control-group>\n\n      <control-group label="Styles">\n        <textarea class="styles" rows="18" ng-model="themeIndex.styles" placeholder=".masthead { background-color: red; }" spellcheck="false"></textarea>\n        <p class="inline-help">Styles will be appended to the default stylesheet, overriding any rules with identical selectors.</p>\n      </control-group>\n\n      <control-group>\n        <error-box for="themeIndex.saving"></error-box>\n        <button type="submit" class="btn btn-success" ng-disabled="themeIndex.saving.isBusy">Save changes</button>\n      </control-group>\n    </form>\n\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("user_account.tpl.html",'<user-layout data-title="Account" class="user-account">\n  <div class="summary">\n    <p>Update the details of your Seq user account. For help with configuring your account, contact the administrator of your Seq server.</p>\n  </div>\n  <error-box for="userAccount.loading"></error-box>\n  <loading until="userAccount.user">\n    <form ng-submit="userAccount.saveChanges()">\n      <control-group label="Username">\n        <div class="uneditable-input username">{{userAccount.user.Username}}</div>\n      </control-group>\n\n      <control-group label="Display name">\n        <input type="text" ng-model="userAccount.user.DisplayName" class="input-xlarge" />\n      </control-group>\n\n      <control-group label="Email address">\n        <input type="text" ng-model="userAccount.user.EmailAddress" class="input-xxlarge" />\n        <p class="inline-help">Will be used to show your <a href="https://gravatar.com">Gravatar</a>.</p>\n      </control-group>\n\n      <div ng-if="userAccount.settings.isBasicAuth">\n        <change-password user="userAccount.user" issues="userAccount.passwordIssues"></change-password>\n      </div>\n\n      <control-group>\n        <error-box for="userAccount.saving"></error-box>\n        <button type="submit" class="btn btn-success" ng-disabled="userAccount.saving.isBusy || userAccount.passwordIssues.invalid">Save changes</button>\n      </control-group>\n    </form>\n  </loading>\n</user-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("user_layout.tpl.html",'<div class="user-layout">\n  <div class="title">\n    <h2>{{ userLayout.title }} <span class="subtitle">{{ userLayout.subtitle }}</span></h2>\n  </div>\n  <div class="content">\n    <ul class="tabs">\n      <li ng-repeat="tab in userLayout.tabs track by tab.title"\n          ng-class="{\'active\': tab.isActive }">\n        <a ng-href="#/user/{{tab.slug}}" title="{{ tab.subtitle }}">{{ tab.title }}</a>\n      </li>\n    </ul>\n    <div class="page" tidy-scroller="[]">\n      <div ng-transclude></div>\n    </div>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("user_permalinks.tpl.html",'<user-layout data-title="Permalinks" class="user-permalinks">\n  <div class="summary">\n    <p>Permalinks are bookmarked events that will be excluded from retention policy processing.</p>\n  </div>\n  <error-box for="userPermalinks.loading"></error-box>\n  <error-box for="userPermalinks.removing"></error-box>\n  <loading while="userPermalinks.loading.isBusy">\n    <div class="empty-message" ng-show="userPermalinks.permalinks.length == 0">You don\'t have any permalinks. Use\n      the <em>Retain</em> menu on the details of an event to create permalinks.</div>\n    <div class="permalinked-event" ng-repeat="permalink in userPermalinks.permalinks track by $index">\n      <a href="" ng-click="userPermalinks.remove(permalink)" class="remove">&times;</a>\n      <div class="permalink-details">\n        <img class="permalink-icon" ng-src="img/bookmark-24.png">\n        <a title="{{permalink.Event.Timestamp}}" href="#/events/?filter=@Id%20%3D%20%27{{permalink.EventId}}%27&showExpanded">\n          <event-timestamp value="permalink.Event.Timestamp" time-prefs="userPermalinks.timePrefs"></event-timestamp>\x3c!--\n       --\x3e<level-indicator level="permalink.Event.Level"></level-indicator>\x3c!--\n       --\x3e{{ permalink.Event.RenderedMessage }}\n        </a>\n      </div>\n    </div>\n  </loading>\n</user-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("user_preferences.tpl.html",'<user-layout data-title="Preferences">\n  <div class="summary">\n    <p>These preferences apply when you use Seq.</p>\n  </div>\n  <error-box for="userPreferences.loading"></error-box>\n  <loading while="userPreferences.loading.isBusy">\n    <form ng-submit="userPreferences.saveChanges()">\n      <control-group label="Default signals">\n        <signal-expression-editor expression="userPreferences.defaultSignalExpression"></signal-expression-editor>\n        <p class="inline-help">When opening the events screen or clicking the <em>Defaults</em> item in the signal bar, the signals here will be selected automatically.</p>\n      </control-group>\n\n      <control-group label="Query timeout">\n        <input type="text" ng-model="userPreferences.queryTimeoutSeconds" class="input-small" />\n        <p class="inline-help">The timeout to use, in seconds, when running SQL queries. The system default is 60.</p>\n      </control-group>\n\n      <control-group>\n        <label class="checkbox">\n          <input type="checkbox" ng-model="userPreferences.showTimestampsIn12HourTime" /> Show timestamps in AM/PM format\n        </label>\n        <br>\n        <label class="checkbox">\n          <input type="checkbox" ng-model="userPreferences.showTimestampsInUtc" /> Show timestamps in Coordinated Universal Time (UTC)\n        </label>\n      </control-group>\n\n      <control-group label="Start of week">\n        <select class="input" ng-model="userPreferences.startOfWeek">\n          <option ng-value="0">Sunday</option>\n          <option ng-value="1">Monday</option>\n          <option ng-value="2">Tuesday</option>\n          <option ng-value="3">Wednesday</option>\n          <option ng-value="4">Thursday</option>\n          <option ng-value="5">Friday</option>\n          <option ng-value="6">Saturday</option>\n        </select>\n      </control-group>\n\n      <control-group>\n        <error-box for="userPreferences.saving"></error-box>\n        <button type="submit" class="btn btn-success" ng-disabled="userPreferences.saving.isBusy">Save changes</button>\n      </control-group>\n    </form>\n  </loading>\n</user-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("alert_editor.tpl.html",'<div class="alert-editor form-page">\n  <form ng-submit="">\n    <control-group label="Condition">\n      <input type="text" class="input chart-editor-input source"\n             autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n             ng-keypress="alertEditor.onChange()"\n             ng-model="alertEditor.alertData.Condition" blur-on-enter\n             ng-change="alertEditor.onChange()"/>\n      <p class="available-terms inline-help">Computed from query columns:\n        <a href="" class="available-label" ng-repeat="measurement in alertEditor.query.chartQuery.Measurements"\n           ng-click="alertEditor.appendCondition(measurement.Label)">{{measurement.Label}}</a></p>\n      <p class="inline-help">\n        Any valid expression may be used, for example: <code>{{alertEditor.query.chartQuery.Measurements[0].Label}} &gt; 100</code>\n      </p>\n    </control-group>\n    <control-group label="Measurement window">\n      <duration-text-input duration="alertEditor.alertData.MeasurementWindow" on-change="alertEditor.onChange()"></duration-text-input>\n      <p class="inline-help">The interval that the condition will be measured over. Seq will check the condition at least\n        once per measurement window.</p>\n    </control-group>\n    <control-group label="Suppression time">\n      <duration-text-input duration="alertEditor.alertData.SuppressionTime" on-change="alertEditor.onChange()"></duration-text-input>\n      <p class="inline-help">The time after the alert is triggered during which no further notifications will be sent.</p>\n    </control-group>\n    <control-group label="Level">\n      <select class="input" ng-model="alertEditor.alertData.Level" ng-change="alertEditor.onChange()">\n        <option value="Information">Information</option>\n        <option value="Warning">Warning</option>\n        <option value="Error">Error</option>\n        <option value="Fatal">Fatal</option>\n      </select>\n    </control-group>\n    <control-group label="Notification app">\n      <select ng-model="alertEditor.alertData.NotificationAppInstanceId"\n              ng-change="alertEditor.notificationAppChanged()"\n              ng-options="ai.id as ai.title for ai in alertEditor.appInstances" class="input-large">\n      </select>\n      <p class="inline-help">A Seq app instance to notify when the alert is triggered.</p>\n    </control-group>\n    <control-group label="{{setting.DisplayName}}" ng-repeat="setting in alertEditor.notificationAppInstance.invocationOverridableSettingDefinitions track by setting.Name">\n      <app-setting-input\n        type="setting.Type"\n        display-name="setting.DisplayName"\n        placeholder="alertEditor.notificationAppInstance.settings[setting.Name]"\n        model="alertEditor.alertData.NotificationAppSettingOverrides[setting.Name]"\n        on-change="alertEditor.onChange()">\n      </app-setting-input>\n      <p class="inline-help" ng-if="setting.HelpText">{{setting.HelpText}}</p>\n    </control-group>\n  </form>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("alerts_editor.tpl.html",'<div class="alerts-editor">\n  <div class="empty-message" ng-hide="alertsEditor.query.chartQuery.Measurements[0].Label">Add labeled columns\n    to the query before configuring alerts.</div>\n  <alert-editor-dialog is-visible="alertsEditor.editing" is-new="alertsEditor.isNew" alert="alertsEditor.editingAlert" on-change="alertsEditor.onChange()"></alert-editor-dialog>\n  <a href="" class="alert-row" ng-repeat="alert in alertsEditor.query.alerts track by alert.sequenceNumber"\n     ng-click="alertsEditor.startEditing(alert)"><level-indicator level="alert.alert.Level" ng-repeat="l in [alert.alert.Level] track by l"></level-indicator> {{alert.describe()}}</a>\n  <button type="button" class="btn add-alert-button"\n          ng-show="alertsEditor.query.chartQuery.Measurements[0].Label"\n          ng-click="alertsEditor.addAlert()"><img src="img/dashboard-add-chart.png" alt="Add"></button>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("chart_query_editor.tpl.html",'<form ng-submit="" class="chart-query-editor">\n  <control-group label="Select" class="no-margin-bottom">\n    <labeled-term-input model="chartQueryEditor.query.Measurements" on-change="chartQueryEditor.onChange()"></labeled-term-input>\n  </control-group>\n  <control-group label="Where">\n    <input type="text" class="input chart-editor-input source"\n           autocomplete="off" ng-model-options="{ updateOn: \'change blur\'}"\n           ng-model="chartQueryEditor.query.Where" blur-on-enter\n           ng-change="chartQueryEditor.onChange()">\n  </control-group>\n  <control-group label="Group by" class="no-margin-bottom">\n    <term-input model="chartQueryEditor.query.GroupBy" on-change="chartQueryEditor.onChange()"></term-input>\n  </control-group>\n</form>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("chart_style_editor.tpl.html",'<form ng-submit="" class="chart-style-editor">\n  <control-group label="Palette">\n    <select ng-model="chartStyleEditor.displayStyle.Palette"\n            ng-change="chartStyleEditor.onChangeStyle()">\n      <option ng-value="\'Default\'">Default</option>\n      <option ng-value="\'Reds\'">Reds</option>\n      <option ng-value="\'Greens\'">Greens</option>\n      <option ng-value="\'Blues\'">Blues</option>\n      <option ng-value="\'OrangePurple\'">Orange-purple</option>\n    </select>\n  </control-group>\n  <control-group label="Type">\n    <select ng-model="chartStyleEditor.displayStyle.Type"\n            ng-change="chartStyleEditor.onChangeType()">\n      <option ng-value="type" ng-repeat="type in chartStyleEditor.types">{{ type }}</option>\n    </select>\n  </control-group>\n  <control-group ng-show="chartStyleEditor.displayStyle.Type == \'Line\'">\n    <label><input ng-change="chartStyleEditor.onChangeStyle()"\n                  class="input" type="checkbox"\n                  ng-model="chartStyleEditor.displayStyle.LineFillToZeroY" /> Fill to zero (Y axis)</label>\n  </control-group>\n  <control-group ng-show="chartStyleEditor.displayStyle.Type == \'Line\'">\n    <label><input ng-change="chartStyleEditor.onChangeStyle()"\n                  class="input" type="checkbox"\n                  ng-model="chartStyleEditor.displayStyle.LineShowMarkers" /> Show point markers</label>\n  </control-group>\n  <control-group ng-show="chartStyleEditor.displayStyle.Type == \'Bar\'">\n    <label><input ng-change="chartStyleEditor.onChangeStyle()"\n                  class="input" type="checkbox"\n                  ng-model="chartStyleEditor.displayStyle.BarOverlaySum" /> Overlay the sum of all bars</label>\n  </control-group>\n</form>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("range_picker.tpl.html",'<div class="range-picker">\n  <a href="" ng-click="rangePicker.toggle()" class="range-toggle">Last {{rangePicker.activeDuration.description}} by {{rangePicker.activeGrouping.description}} &#x25be;</a>\n  <div class="range-options" ng-class="{\'open\': rangePicker.open}">\n    <ul class="durations">\n      <li ng-repeat="duration in rangePicker.durationOptions track by $index">\n        <a href="" ng-click="rangePicker.selectDuration(duration)"\n           ng-class="{\'selected\': duration == rangePicker.activeDuration}">Last {{duration.description}}</a>\n      </li>\n    </ul>\n    <ul class="groupings">\n      <li ng-repeat="grouping in rangePicker.groupingOptions track by $index">\n        <a href="" ng-click="rangePicker.isAvailable(grouping) && rangePicker.selectGrouping(grouping)"\n           ng-class="{\'selected\': grouping == rangePicker.activeGrouping, \'disabled\': !rangePicker.isAvailable(grouping)}">by {{grouping.description}}</a>\n      </li>\n    </ul>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("as_bar.tpl.html",'<div class="data as-bar">\n  <div class="bar-chart" ng-class="{\'displayable\': asBar.hasData}">\n    <div class="instructions">\n      <p>To plot a bar chart, use a SQL query that returns two or three columns. The rightmost column must be numeric:</p>\n      <pre>select count(*) from stream group by @Level</pre>\n    </div>\n    <div class="chart" ng-hide="asBar.isDrawing" id="bar-view-chart"></div>\n  </div>\n  <div class="query-statistics" ng-show="dataSet.statistics">Computed in {{dataSet.statistics.ElapsedMilliseconds | number:1}} ms</div>\n  <div class="query-statistics" ng-hide="dataSet">Canceled</div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("as_pie.tpl.html",'<div class="data as-pie">\n  <div class="pie-chart" ng-class="{\'displayable\': asPie.hasData}">\n    <div class="instructions">\n      <p>To plot a pie chart, use a SQL query that returns two columns. The rightmost column must be numeric:</p>\n      <pre>select count(*) from stream group by @Level</pre>\n    </div>\n    <div class="chart" ng-hide="asPie.isDrawing" id="pie-view-chart"></div>\n  </div>\n  <div class="query-statistics" ng-show="dataSet.statistics">Computed in {{dataSet.statistics.ElapsedMilliseconds | number:1}} ms</div>\n  <div class="query-statistics" ng-hide="dataSet">Canceled</div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("as_timeseries.tpl.html",'<div class="data as-timeseries">\n  <div class="timeseries-chart" ng-class="{\'displayable\': asTimeseries.hasData}">\n    <div class="instructions">\n      <p>To plot a timeseries chart, use a SQL query with a <code>time</code> grouping:</p>\n      <pre>select count(*) from stream group by time(1h)</pre>\n      <p>If further groupings are required, specify the <code>time</code> grouping <strong>last</strong>:</p>\n      <pre>select count(*) from stream group by MachineName, time(1h)</pre>\n      <p>Or, query for a regular rowset where the first column is a timestamp.</p>\n    </div>\n    <div class="chart" ng-hide="asTimeseries.isDrawing" id="timeseries-view-chart"></div>\n  </div>\n  <div class="query-statistics" ng-show="dataSet.statistics">Computed in {{dataSet.statistics.ElapsedMilliseconds | number:1}} ms</div>\n  <div class="query-statistics" ng-hide="dataSet">Canceled</div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("as_table.tpl.html",'<div class="data as-table">\n  <table ng-if="dataSet.rows">\n    <thead>\n    <tr>\n      <th ng-repeat="column in dataSet.columns track by $index"><div class="property-name">{{::column}}</div></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat="row in dataSet.rows track by $index">\n      <td ng-repeat="cell in row track by $index">\n        <div class="property-value jnull" ng-if="::asTable.isNull(cell)">null</div>\n        <div class="property-value" ng-if="::asTable.isScalar(cell)">{{ ::cell }}</div>\n        <div class="property-value" ng-if="::asTable.isStructure(cell)"><json-value model="::cell"></json-value></div>\n        <div class="property-value evtid" ng-if="::asTable.isEventId(cell)"><a href="#/events/?filter=@Id%20%3D%20\'{{cell}}\'&amp;showExpanded">{{ cell }}</a></div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n  <table ng-if="dataSet.slices">\n    <thead>\n    <tr>\n      <th class="timestamp"><div class="property-name">time</div></th>\n      <th ng-repeat="column in dataSet.columns track by $index"><div class="property-name">{{::column}}</div></th>\n    </tr>\n    </thead>\n    <tbody ng-repeat="slice in dataSet.slices track by slice.Time">\n    <tr ng-if="slice.Rows.length == 0">\n      <td><div class="data-timestamp">{{::asTable.formatTime(slice.Time)}}</div></td>\n      <td colspan="{{::dataSet.columns.length}}" class="empty"></td>\n    </tr>\n    <tr ng-repeat="row in slice.Rows track by $index">\n      <td ng-if="$first" rowspan="{{slice.Rows.length}}"><div class="data-timestamp">{{::asTable.formatTime(slice.Time)}}</div></td>\n      <td ng-repeat="cell in row track by $index" class="noindent">\n        <div class="property-value jnull" ng-if="::asTable.isNull(cell)">null</div>\n        <div class="property-value" ng-if="::asTable.isScalar(cell)">{{ ::cell }}</div>\n        <div class="property-value" ng-if="::asTable.isStructure(cell)"><json-value model="::cell"></json-value></div>\n        <div class="property-value evtid" ng-if="::asTable.isEventId(cell)"><a href="#/events/?filter=@Id%20%3D%20\'{{cell}}\'&amp;showExpanded">{{ cell }}</a></div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n  <table ng-if="dataSet.series">\n    <thead>\n    <tr>\n      <th ng-repeat="column in asTable.seriesColumns track by $index" class="{{::columnn.cls}}">\n        <div class="property-name">{{::column.name}}</div>\n      </th>\n    </tr>\n    </thead>\n    <thead ng-repeat-start="series in dataSet.series track by $index" style="display:none"></thead>\n    <tbody ng-repeat="slice in series.Slices track by slice.Time" ng-init="firstSlice = $first" >\n    <tr ng-if="slice.Rows.length == 0">\n      <td rowspan="{{::slice.Rows.length}}" ng-repeat="key in series.Key track by $index" class="key">\n        <div ng-if="::firstSlice">\n          <div class="property-value jnull" ng-if="::asTable.isNull(key)">null</div>\n          <div class="property-value" ng-if="::asTable.isScalar(key)">{{ ::key }}</div>\n          <div class="property-value" ng-if="::asTable.isStructure(key)"><json-value model="::key"></json-value></div>\n          <div class="property-value evtid" ng-if="::asTable.isEventId(key)"><a href="#/events/?filter=@Id%20%3D%20\'{{key}}\'&amp;showExpanded">{{ key }}</a></div>\n        </div>\n      </td>\n      <td><div class="data-timestamp">{{::asTable.formatTime(slice.Time)}}</div></td>\n      <td colspan="{{::dataSet.columns.length - series.Key.length}}" class="empty"></td>\n    </tr>\n    <tr ng-repeat="row in slice.Rows track by $index" ng-init="firstRow = $first">\n      <td rowspan="{{::slice.Rows.length}}" ng-repeat="key in series.Key track by $index" class="key" ng-if="firstRow">\n        <div ng-if="::firstSlice">\n          <div class="property-value jnull" ng-if="::asTable.isNull(key)">null</div>\n          <div class="property-value" ng-if="::asTable.isScalar(key)">{{ ::key }}</div>\n          <div class="property-value" ng-if="::asTable.isStructure(key)"><json-value model="::key"></json-value></div>\n          <div class="property-value evtid" ng-if="::asTable.isEventId(key)"><a href="#/events/?filter=@Id%20%3D%20\'{{key}}\'&amp;showExpanded">{{ key }}</a></div>\n        </div>\n      </td>\n      <td ng-if="::firstRow" rowspan="{{::slice.Rows.length}}"><div class="data-timestamp">{{::asTable.formatTime(slice.Time)}}</div></td>\n      <td ng-repeat="cell in row track by $index" class="noindent">\n        <div class="property-value jnull" ng-if="::asTable.isNull(cell)">null</div>\n        <div class="property-value" ng-if="::asTable.isScalar(cell)">{{ ::cell }}</div>\n        <div class="property-value" ng-if="::asTable.isStructure(cell)"><json-value model="::cell"></json-value></div>\n        <div class="property-value evtid" ng-if="::asTable.isEventId(cell)"><a href="#/events/?filter=@Id%20%3D%20\'{{cell}}\'&amp;showExpanded">{{ cell }}</a></div>\n      </td>\n    </tr>\n    </tbody>\n    <tfoot ng-repeat-end style="display:none"></tfoot>\n  </table>\n  <div class="query-statistics" ng-show="dataSet.statistics">Computed in {{dataSet.statistics.ElapsedMilliseconds | number:1}} ms</div>\n  <div class="query-statistics" ng-hide="dataSet">Canceled</div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("event_actions.tpl.html",'<div class="event-actions">\n  <send-to-app-dialog event-entity="eventActions.model" app-instance="eventActions.notifyingAppInstance"></send-to-app-dialog>\n  <dropdown text="Id" subtle>\n    <action-item action="eventActions.filter(eventActions.clause.thisId)">Find just this</action-item>\n    <action-item action="eventActions.filter(eventActions.clause.arrivedBefore)">Find with predecessors</action-item>\n    <action-item action="eventActions.filter(eventActions.clause.arrivedNear)">Find with adjacent</action-item>\n  </dropdown>\n\n  <dropdown text="Level ({{ eventActions.model.Level }})" ng-show="eventActions.model.Level" subtle>\n    <action-item action="eventActions.filter(eventActions.clause.levelOnAnyType)">Find</action-item>\n    <action-item action="eventActions.exclude(eventActions.clause.levelOnAnyType)">Exclude</action-item>\n    <action-item ng-show="eventActions.model.Level != \'Verbose\' && eventActions.model.Level != \'Trace\'"\n                 action="eventActions.exclude(eventActions.clause.levelBelow)">Set as minimum level</action-item>\n    <action-item action="eventActions.query(eventActions.plotOccurrences(eventActions.clause.levelOnAnyType))">Plot occurrences over time</action-item>\n  </dropdown>\n\n  <dropdown text="Type (0x{{ eventActions.model.EventType.substring(1) }})" subtle>\n    <action-item action="eventActions.filter(eventActions.clause.thisType)">Find</action-item>\n    <action-item action="eventActions.filter(eventActions.clause.thisTypeByTemplate)">Find from template</action-item>\n    <action-item action="eventActions.exclude(eventActions.clause.thisType)">Exclude</action-item>\n    <action-item action="eventActions.query(eventActions.plotOccurrences(eventActions.clause.thisType))">Plot occurrences over time</action-item>\n  </dropdown>\n\n  <dropdown text="Retain" subtle>\n    <action-item action="eventActions.permalink()">Make permalink</action-item>\n  </dropdown>\n\n  <dropdown text="Send to app" ng-show="eventActions.appInstances.length > 0" subtle>\n    <action-item ng-repeat="appInstance in eventActions.appInstances | orderBy:\'title\'" action="eventActions.invokeApp(appInstance)">{{ appInstance.title }}</action-item>\n  </dropdown>\n\n  <a href="" ng-click="eventActions.rawJson()" class="action">Raw JSON</a>\n\n  <permalink is-visible="eventActions.showPermalink" event="eventActions.model"></permalink>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("event_properties.tpl.html",'<div class="event-properties">\n  <div class="property" ng-repeat="property in eventProperties.properties | orderBy:\'name\' track by property.name">\n    <div class="property-tools">\n      <dropdown icon-class="tool-icon filter">\n        <action-item ng-show="property.isScalar" action="eventProperties.filter(eventProperties.propertyOnAnyType(property))">Find</action-item>\n        <action-item ng-show="property.isScalar" action="eventProperties.filter(eventProperties.propertyOnThisType(property))">Find on this event type</action-item>\n        <action-item action="eventProperties.filter(eventProperties.hasPropertyOnAnyType(property))">Find with any value</action-item>\n        <action-item ng-show="property.isScalar" action="eventProperties.query(eventProperties.countByValue(property))">Count by value</action-item>\n        <action-item ng-show="property.isScalar" action="eventProperties.filterWithSignal(eventProperties.propertyOnAnyType(property))">Add to signal</action-item>\n        <divider-item ng-show="property.isNumeric"></divider-item>\n        <action-item ng-show="property.isNumeric" action="eventProperties.query(eventProperties.valueByTime(property))">Plot over time</action-item>\n        <action-item ng-show="property.isNumeric" action="eventProperties.query(eventProperties.numericAggregates(property))">Plot aggregates over time</action-item>\n        <divider-item ng-show="property.isScalar && eventProperties.canTag(property)"></divider-item>\n        <action-item ng-show="property.isScalar && eventProperties.canTag(property)" action="eventProperties.showAsTag(property)">Show as <span class="next-tag tag-{{eventProperties.nextTag}}">tag</span></action-item>\n      </dropdown>\n      <dropdown icon-class="tool-icon exclude">\n        <action-item ng-show="property.isScalar" action="eventProperties.exclude(eventProperties.propertyOnAnyType(property))">Exclude</action-item>\n        <action-item ng-show="property.isScalar" action="eventProperties.exclude(eventProperties.propertyOnThisType(property))">Exclude on this event type</action-item>\n        <action-item action="eventProperties.exclude(eventProperties.hasPropertyOnAnyType(property))">Exclude with any value</action-item>\n      </dropdown>\n    </div>\n    <div class="property-name" title="{{property.name}}">{{property.name}}</div>\n    <div class="property-value" ng-if="property.isScalar" ng-class="{\'imprecise\': property.isImprecise}">{{ property.displayValue }}</div>\n    <div class="property-value" ng-if="property.isEventId"><a href="#/events/?filter=@Id%20%3D%20\'{{property.value}}\'&amp;showExpanded">{{ property.value }}</a></div>\n    <div class="property-value" ng-if="property.isStructure"><json-value model="property.value"></json-value></div>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("event_timestamp.tpl.html",'<div class="event-timestamp" title="{{eventTimestamp.isoString}}"><span>{{ eventTimestamp.dayPart }} <span class="year">{{ eventTimestamp.yearPart }}</span> {{ eventTimestamp.timePart }}</span></div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("rendered_message.tpl.html",'<span class="rendered-message" ng-bind-html="renderedMessage.html"></span>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("send_to_app_dialog.tpl.html",'<div class="send-to-app-dialog">\n  <modal is-visible="sendToAppDialog.isVisible" on-cancel="sendToAppDialog.close()">\n    <a class="close" href="" ng-click="sendToAppDialog.close()">&times;</a>\n    <img class="app-heading-icon" src="img/seq-app-package-default.png" ng-src="{{ sendToAppDialog.instance.iconUrl || \'img/seq-app-package-default.png\' }}" />\n    <h2 class="form-dialog-header">{{sendToAppDialog.instance.title}}</h2>\n    <control-group label="{{setting.DisplayName}}" ng-repeat="setting in sendToAppDialog.overridableSettings">\n      <app-setting-input\n        type="setting.Type"\n        display-name="setting.DisplayName"\n        placeholder="sendToAppDialog.instance.settings[setting.Name]"\n        model="sendToAppDialog.overriddenSettings[setting.Name]">\n      </app-setting-input>\n      <p class="inline-help" ng-if="setting.HelpText">{{setting.HelpText}}</p>\n    </control-group>\n    <control-group>\n      <error-box for="sendToAppDialog.sending"></error-box>\n      <button type="button" class="btn btn-success" ng-click="sendToAppDialog.sendToApp()">Send</button>\n      <button type="button" class="btn" ng-click="sendToAppDialog.close()">Cancel</button>\n    </control-group>\n  </modal>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("tagged_properties.tpl.html",'<span class="tagged-properties tag" ng-show="taggedProperties.show">\n  <span ng-repeat="tag in taggedProperties.tags track by tag.name" title="{{::tag.name}}" class="property-name tag-{{tag.index }}">{{::tag.value }}</span>\n</span>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){
e.put("autocomplete.tpl.html",'<ul class="autocomplete">\n  <li ng-repeat="opt in suggestions.backtracks track by opt">\n    <a href="" ng-click="autocomplete.select(opt)">{{opt}}</a>\n  </li>\n  <li class="ellipsis">&hellip;</li>\n  <li ng-repeat="opt in suggestions.matches track by opt">\n    <a ng-class="{default: $first}" href="" ng-click="autocomplete.select(opt)">{{opt}}</a>\n  </li>\n</ul>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("dashboard_picker.tpl.html",'<div class="dashboard-picker">\n  <div class="popout" ng-class="{\'open\': dashboardPicker.isVisible}">\n    <loading until="dashboardPicker.dashboards" spinner-class="dashboard-picker-data">\n      <h4>Add to dashboard</h4>\n      <div class="picker-items" tidy-scroller="dashboardPicker.dashboards">\n        <ul class="dashboard-picker-list">\n          <li ng-repeat="item in dashboardPicker.dashboards | orderBy:\'Title\' track by (item.Id || $index)"\n              ng-class="{\'shared\': !item.OwnerId }"\n              ng-click="dashboardPicker.choose(item)">\n            <a href="" class="item-title">{{ item.Title }}</a>\n          </li>\n        </ul>\n      </div>\n      <a href="" class="btn add-button" ng-click="dashboardPicker.chooseNew()">New Dashboard</a>\n    </loading>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("filter_box.tpl.html",'<div class="filter-box" ng-class="{\'cm-focused\': filterBox.cmFocused}">\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("add_signal.tpl.html",'<div>\n  <modal is-visible="isVisible">\n    <div class="add-signal">\n      <a class="close" href="" ng-click="addSignal.close()">&times;</a>\n      <button class="btn btn-success create-new" type="button" ng-click="addSignal.create()">New</button>\n      <h2>All Signals</h2>\n      <input type="text" class="list-filter-box" ng-model="addSignal.filter" placeholder="Filter by name" autocomlete="off" />\n      <error-box for="addSignal.adding"></error-box>\n      <div class="all-signals" tidy-scroller="addSignal.signals">\n        <loading while="addSignal.adding.isBusy">\n          <ul>\n            <li class="signal" ng-repeat="signal in addSignal.signals | filter:addSignal.filter track by signal.entity.Id">\n              <h3>\n                <a ng-hide="signal.entity.IsWatched" href="" ng-click="addSignal.add(signal)">{{ signal.entity.Title }}</a>\n                <span class="watched" ng-show="signal.entity.IsWatched">{{ signal.entity.Title }} <small>(added)</small></span>\n              </h3>\n              <p ng-show="signal.entity.Description" class="description">{{signal.entity.Description}}</p>\n              <p class="description empty" ng-hide="signal.entity.Description">No description provided</p>\n            </li>\n          </ul>\n        </loading>\n      </div>\n    </div>\n  </modal>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("add_query.tpl.html",'<div>\n  <modal is-visible="isVisible">\n    <div class="add-query">\n      <a class="close" href="" ng-click="addQuery.close()">&times;</a>\n      <button class="btn btn-success create-new" type="button" ng-click="addQuery.create()">New</button>\n      <h2>All Queries</h2>\n      <input type="text" class="list-filter-box" ng-model="addQuery.filter" placeholder="Filter by name" autocomplete="off" />\n      <error-box for="addQuery.adding"></error-box>\n      <div class="all-queries" tidy-scroller="addQuery.queries">\n        <loading while="addQuery.adding.isBusy">\n          <ul>\n            <li class="query" ng-repeat="query in addQuery.queries | filter:addQuery.filter track by query.entity.Id">\n              <h3>\n                <a ng-hide="query.entity.Show" href="" ng-click="addQuery.add(query)">{{ query.entity.Title }}</a>\n                <span class="watched" ng-show="query.entity.Show">{{ query.entity.Title }} <small>(added)</small></span>\n              </h3>\n              <p ng-show="query.entity.Description" class="description">{{query.entity.Description}}</p>\n              <p class="description empty" ng-hide="query.entity.Description">No description provided</p>\n            </li>\n          </ul>\n        </loading>\n      </div>\n    </div>\n  </modal>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("current_query.tpl.html",'<div class="current-query">\n  <div class="controls">\n    <loading while="currentQuery.saving.isBusy">\n      <img src="img/signal-save.png" class="img-btn" title="Save" ng-class="{\'disabled\': !queryEditor.dirty}" ng-click="currentQuery.save()" alt="Save current query" />\n      <img src="img/signal-close.png" class="img-btn" title="Close" ng-click="currentQuery.close()" alt="Close current query" />\n      <dropdown align="right">\n        <action-item action="currentQuery.remove()" disabled="!queryEditor.open.Id">Remove</action-item>\n        <divider-item></divider-item>\n        <action-item action="currentQuery.del()" disabled="!queryEditor.open.Id">Delete</action-item>\n      </dropdown>\n    </loading>\n  </div>\n  <h2 ng-show="queryEditor.open" class="query-title"><inplace-editor\n      model="queryEditor.open.Title"\n      input-class="title-editor"\n      commit="queryEditor.updateTitle($value)">{{ queryEditor.open.Title }}<span ng-show="queryEditor.dirty"> *</span></inplace-editor></h2>\n  <error-box for="currentQuery.saving"></error-box>\n  <p class="query-description" ng-show="queryEditor.open.Description">{{queryEditor.open.Description}}</p>\n  <div class="items">\n    <p class="empty-message">\n      Press <em>Save</em> to apply changes, or close the query to discard your edits.\n    </p>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("current_signal.tpl.html",'<div class="current-signal">\n  <raw-editor is-visible="currentSignal.editingRaw" data="signalEditor.open" edited="currentSignal.editedRaw($data)"></raw-editor>\n  <div class="controls">\n    <loading while="currentSignal.saving.isBusy">\n      <img src="img/signal-save.png" class="img-btn" title="Save" ng-class="{\'disabled\': !signalEditor.dirty}" ng-click="currentSignal.save()" alt="Save current signal" />\n      <img src="img/signal-close.png" class="img-btn" title="Close" ng-click="currentSignal.close()" alt="Close current signal" />\n      <dropdown align="right">\n        <action-item action="currentSignal.remove()" disabled="!signalEditor.open.Id">Remove</action-item>\n        <action-item action="currentSignal.editingRaw = true">Edit as JSON</action-item>\n        <action-item action="currentSignal.switchToClone()">Switch to Clone</action-item>\n        <action-item ng-show="seq.user.IsAdministrator" action="currentSignal.toggleRestricted()"><checkmark checked="signalEditor.open.IsRestricted"></checkmark> Restricted</action-item>\n        <divider-item></divider-item>\n        <action-item action="currentSignal.del()" disabled="!signalEditor.open.Id">Delete</action-item>\n      </dropdown>\n    </loading>\n  </div>\n  <h2 ng-show="signalEditor.open" class="signal-title"><inplace-editor\n      model="signalEditor.open.Title"\n      input-class="title-editor"\n      commit="signalEditor.updateTitle($value)">{{ signalEditor.open.Title }}<span ng-show="signalEditor.dirty"> *</span></inplace-editor></h2>\n  <error-box for="currentSignal.saving"></error-box>\n  <p class="signal-description" ng-show="signalEditor.open.Description">{{signalEditor.open.Description}}</p>\n  <div class="items">\n    <h3 class="subhead">Filters</h3>\n    <p class="empty-message" ng-show="signalEditor.open.Filters.length == 0">\n      Use the <span class="keycap">&raquo;</span> button to add more filters to the signal.\n    </p>\n    <ul class="filters">\n      <li class="filter" ng-repeat="filter in signalEditor.open.Filters track by $index">\n        <inplace-editor\n            model="filter.FilterNonStrict || filter.Filter"\n            input-class="filter-editor"\n            commit="currentSignal.updateFilter(filter, $value)">\n          <a href="" class="remove" ng-click="currentSignal.removeFilter(filter)">&times;</a>\n          <span title="{{ filter.Filter }}"\n                class="description"\n                ng-class="{excluded: filter.DescriptionIsExcluded, code: !filter.Description}">{{ filter.Description || filter.FilterNonStrict || filter.Filter }}</span>\n        </inplace-editor>\n      </li>\n    </ul>\n    <h3 class="subhead">Tags</h3>\n    <p class="empty-message" ng-show="signalEditor.open.TaggedProperties.length == 0">\n      Add tags from the event property context menu.\n    </p>\n    <ul class="tags">\n      <li class="tag" ng-repeat="tag in signalEditor.open.TaggedProperties track by tag.PropertyName">\n      <span class="property-name tag-{{currentSignal.tagNumber(tag)}}">\n        {{ tag.PropertyName }} <a href="" class="remove" ng-click="currentSignal.removeTag(tag)">&times;</a>\n      </span>\n      </li>\n    </ul>\n    <h3 class="subhead">Group</h3>\n    <ul class="grouping-mode">\n      <li ng-class="{\'active\': signalEditor.open.Grouping == \'Inferred\'}" ng-click="signalEditor.updateGrouping(\'Inferred\')">Automatic</li>\n      <li ng-class="{\'active\': signalEditor.open.Grouping == \'None\'}" ng-click="signalEditor.updateGrouping(\'None\')">Disabled</li>\n      <li ng-class="{\'active\': signalEditor.open.Grouping == \'Explicit\'}" ng-click="signalEditor.updateGrouping(\'Explicit\')">Specify</li>\n    </ul>\n    <p class="grouping-editor" ng-if="signalEditor.open.Grouping == \'Explicit\'">\n      <inplace-editor\n          model="signalEditor.open.ExplicitGroupName"\n          input-class="group-name-editor"\n          initially-editing="!(signalEditor.open.ExplicitGroupName)"\n          commit="signalEditor.updateGroupName($value)">\n        <span class="group-name">{{ signalEditor.open.ExplicitGroupName }}</span>\n      </inplace-editor>\n    </p>\n  </div>\n</div>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("footer.tpl.html",'<span><a href="https://getseq.net">Seq 4.2.476 <span class="single-user" ng-show="seq.settings.isSingleUser">Single-User License</span></a> &mdash; Copyright&nbsp;&copy;&nbsp;2018</span>\n<available-updates></available-updates>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("query_list.tpl.html",'<div class="query-list">\n  <h3 class="subhead">\n    <a class="add-list-item" href="" ng-click="queryList.addQuery()"><i class="icon-add-item">Create or add</i></a>\n    <a href="" ng-click="queryList.addQuery()">Queries</a>\n  </h3>\n  <loading until="signalBar.queries">\n    <ul class="queries list-items left">\n      <li ng-repeat="query in signalBar.queries | filter:queryList.shown track by query.entity.Id"\n          class="query list-item"\n          ng-class="{\'editing\': query.isEditing, \'active\': query.isActive}">\n        <a href="" ng-click="queryList.edit(query)" class="edit"><i class="icon-edit-item">Edit</i></a>\n        <a href="" class="query-title item-title" ng-click="queryList.activate(query)">{{ query.entity.Title }}</a>\n      </li>\n    </ul>\n    <add-query ng-if="signalBar.queries" queries="signalBar.queries"\n                is-visible="queryList.addingQuery" on-create="queryList.create($title)"\n                on-added="queryList.added($value)"></add-query>\n  </loading>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("signal_list.tpl.html",'<div class="signal-list">\n  <h3 class="subhead">\n    <a class="add-list-item" href="" ng-click="signalList.addSignal()"><i class="icon-add-item">Create or add</i></a>\n    <a href="" ng-click="signalList.addSignal()">Signals</a>\n  </h3>\n  <loading until="signalList.signalBar.signals">\n    <error-box for="signalList.signalBar.loading"></error-box>\n    <ul class="signals list-items left">\n      <li class="signal list-item virtual">\n        <a class="signal-title item-title" href="" ng-click="signalList.none()">None</a>\n      </li>\n      <li class="signal list-item virtual" ng-show="signalList.signalBar.hasDefaults">\n        <a class="signal-title item-title" href="" ng-click="signalList.default()">Defaults</a>\n      </li>\n      <li ng-repeat-start="item in signalList.items track by item.trackingKey" style="display:none"></li>\n      <li class="group list-item" ng-class="{\'hidden\': signalList.groupIsCollapsed(group), \'empty\': signalList.groupIsEmpty(group)}"\n          ng-if="item.group"\n          ng-init="group = item.group">\n        <a href="" class="toggle-list" ng-click="signalList.toggleGroup(group)"><i>Toggle Group</i></a>\n        <h4 class="group-name"  ng-class="{\'virtual\': group.isVirtual}" ng-click="signalList.toggleGroup(group)">{{ group.group }}</h4>\n        <ul class="signals list-items left">\n          <li ng-repeat="signal in group.signals track by signal.id"\n              class="signal list-item {{ signalList.signalClass(signal, group) }}"\n              ng-class="{\'active\': signal.activated, \'editing\': signalList.signalBar.isEditingSignal(signal)}">\n            <a href="" ng-click="signalList.edit(signal)" class="edit"><i>Edit</i></a>\n            <a href="" class="signal-title item-title" ng-click="signalList.toggle(signal)">{{ signal.title }}</a>\n          </li>\n        </ul>\n      </li>\n      <li ng-if="item.signal" ng-init="signal = item.signal"\n          class="signal list-item {{ signalList.signalClass(signal) }}"\n          ng-class="{\'active\': signal.activated, \'editing\': signal.isEditing}">\n        <a href="" ng-click="signalList.edit(signal)" class="edit"><i>Edit</i></a>\n        <a href="" class="signal-title item-title" ng-click="signalList.toggle(signal)">{{ signal.title }}</a>\n      </li>\n      <li ng-repeat-end style="display:none"></li>\n    </ul>\n    <add-signal ng-if="signalList.signalBar.signals" signals="signalList.signalBar.signals"\n                is-visible="signalList.addingSignal" on-create="signalList.create($title)"\n                on-added="signalList.added($value)"></add-signal>\n  </loading>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("event_set_statistics.tpl.html",'<div class="event-set-statistics">\n  <p class="stats" ng-hide="eventSet.isAutoRefresh">\n    <loading while="!eventSet.isComplete" loading-class="loading-enclosure" spinner-class="loading-spinner"></loading>\n    <span ng-show="eventSet.statistics.scanned > 1">{{ eventSet.statistics.scanned }} events scanned\n      to {{eventSet.statistics.scannedUntil | calendar}}<span class="cache-exceeded" ng-show="eventSet.statistics.uncachedSegmentsScanned" title="Searching archived segments on disk"></span>&hellip; </span></span>\n    <span ng-show="eventSet.statistics.scanned <= 1">Loading&hellip;</span>\n    <span ng-show="eventSet.isComplete">complete.</span>\n  </p>\n  <p class="stats" ng-show="eventSet.isAutoRefresh">Auto-refresh is on, turn it off to see more</p>\n  <p class="empty-message" ng-hide="eventSet.loading.isBusy || refreshing.isBusy || eventSet.events.length != 0">No events matched the current filter.\n    If signals are selected, filters on the signals may be excluding events of interest. If a date range is selected, there may not be any matching events in the range.</p>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("license_status.tpl.html",'<div class="license-status">\n  <div class="alert-error" ng-show="licenseStatus.isError">\n    <h3>There\'s a problem with your Seq license</h3>\n    <p>{{ licenseStatus.license.StatusDescription }}</p>\n    <p>Seq is still collecting application events, but queries will be unavailable until the issue is resolved.</p>\n    <p ng-show="licenseStatus.userIsAdmin"><a class="btn" href="#/settings/license">License settings</a></p>\n  </div>\n\n  <div class="alert-warning" ng-show="licenseStatus.isWarning && !licenseStatus.isDismissed">\n    <a class="close" href="" ng-click="licenseStatus.dismiss()">&times</a>\n    <h3>Your Seq trial is nearly finished</h3>\n    <p>{{ licenseStatus.license.StatusDescription }}</p>\n    <p>Choose the right edition for your team and keep enjoying the benefits of great application logs.</p>\n    <p><a class="btn external" target="_blank" href="https://getseq.net/Pricing?rel=trial">Choose Edition</a></p>\n  </div>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("expander.tpl.html",'<a class="expander"\n   title="Show or hide the histogram"\n   ng-class="{\'expanded\': expander.isExpanded}"\n   href="" ng-click="expander.toggle()"></a>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("view_selector.tpl.html",'<a class="view-selector img-{{img}}" href=""\n   ng-click="layout.selectView(view)"\n   ng-class="{\'selected\': layout.selectedView == view}"\n   title="{{caption}}"></a>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("api_keys_edit.tpl.html",'<settings-layout data-title="API Keys" class="api-keys-edit">\n  <error-box for="apiKeysEdit.loading"></error-box>\n\n  <loading until="apiKeysEdit.apiKey">\n    <form ng-submit="apiKeysEdit.saveApiKey()">\n      <div ng-hide="apiKeysEdit.apiKey.IsDefault">\n        <control-group label="Title">\n          <input id="apiKeysEditTitle" class="title-input input-xlarge" type="text" ng-model="apiKeysEdit.apiKey.Title" />\n          <p class="inline-help">Give the API key a title reflecting its purpose, for example "Production Ordering Service".</p>\n        </control-group>\n\n        <control-group label="Token">\n          <p ng-hide="view.showTokenInput || apiKeysEdit.apiKey.Id">A unique API key token will be generated.</p>\n          <input ng-hide="!view.showTokenInput || apiKeysEdit.apiKey.Id" id="token" class="input-xxlarge source" type="text" ng-model="apiKeysEdit.apiKey.Token" />\n          <p ng-hide="!view.showTokenInput || apiKeysEdit.apiKey.Id" class="inline-help">The token must comprise only of alphanumeric characters.\n            <a href="" ng-click="view.showTokenInput = false; apiKeysEdit.apiKey.Token = \'\'">Generate automatically&hellip;</a></p>\n\n          <p ng-show="apiKeysEdit.apiKey.Id" class="source">{{ apiKeysEdit.apiKey.Token }}</p>\n          <p class="inline-help">Use the token when configuring Seq client libraries.\n            <a ng-hide="view.showTokenInput || apiKeysEdit.apiKey.Id" href="" ng-click="view.showTokenInput = true">Specify a token&hellip;</a></p>\n        </control-group>\n\n        <control-group>\n          <label class="checkbox"><input type="checkbox" ng-model="apiKeysEdit.apiKey.CanActAsPrincipal" /> Permit user-level access</label>\n          <p class="inline-help">If granted user-level access, the key may be used to read events, read and write\n            some reference data, and invoke apps.</p>\n          <p class="inline-help">(This setting has no effect unless user authentication is turned on.)</p>\n        </control-group>\n      </div>\n\n      <div ng-show="apiKeysEdit.apiKey.IsDefault">\n        <div class="summary">\n          <p>\n            These settings apply to events that arrive without a valid API key. To disallow ingestion of events without a valid\n            API key, use the <em>Require an API key when writing events</em> checkbox on the <a href="#/settings/api-keys">API Keys index page</a>.\n          </p>\n        </div>\n\n        <control-group label="Title">\n          <div class="uneditable-input title-input">{{apiKeysEdit.apiKey.Title}}</div>\n        </control-group>\n      </div>\n\n      <control-group>\n        <label class="checkbox"><input type="checkbox" ng-model="apiKeysEdit.apiKey.UseServerTimestamps" /> Use server timestamps</label>\n        <p class="inline-help">Record events using server-side arrival time, rather than client-generated timestamps.</p>\n      </control-group>\n\n      <control-group label="Applied properties">\n        <ul class="applied-properties">\n          <li ng-repeat="property in apiKeysEdit.apiKey.AppliedProperties | orderBy:\'Name\'">\n            <a href="" ng-click="apiKeysEdit.removeProperty(property)" class="remove clickable on-hover">&times;</a>\n            <p class="source">{{ property.Name }} = {{ property.Value }}</p>\n          </li>\n        </ul>\n        <div class="add-line"><input class="input" type="text" ng-model="apiKeysEdit.newProperty.Name" /> = <input class="input" type="text" ng-model="apiKeysEdit.newProperty.Value" />\n          <button type="button" class="btn" ng-class="{\'btn-primary\': apiKeysEdit.newProperty.Name}"\n                  ng-click="apiKeysEdit.addProperty()">Add</button></div>\n        <p class="inline-help">Any properties specified here will be attached to events written with the API key.</p>\n      </control-group>\n\n      <control-group label="Minimum level">\n        <select class="input" ng-model="apiKeysEdit.apiKey.MinimumLevel">\n          <option ng-value="null"></option>\n          <option value="Verbose">Verbose</option>\n          <option value="Debug">Debug</option>\n          <option value="Information">Information</option>\n          <option value="Warning">Warning</option>\n          <option value="Error">Error</option>\n          <option value="Fatal">Fatal</option>\n        </select>\n        <p class="inline-help">Set the minimum accepted level for events written with the API key. Events\n          with a level below this will be dropped on arrival.</p>\n        <p class="inline-help">If dynamic level control is configured in the client application (via <em>Serilog.Sinks.Seq</em>),\n          it may take <strong>up to two minutes</strong> for level changes to propagate.</p>\n      </control-group>\n\n      <control-group label="Filter">\n        <filter-editor model="apiKeysEdit.apiKey.InputFilter" busy="apiKeysEdit.parsingFilter"></filter-editor>\n        <p class="inline-help">Apply a custom filter on arrival to events written with the API key.</p>\n      </control-group>\n\n      <control-group>\n        <error-box for="apiKeysEdit.saving"></error-box>\n        <button type="submit"\n                class="btn btn-success"\n                ng-disabled="apiKeysEdit.saving.isBusy || apiKeysEdit.parsingFilter.isBusy">Save changes</button>\n        <button type="button"\n                ng-show="apiKeysEdit.apiKey.Id && !apiKeysEdit.apiKey.IsDefault"\n                class="btn btn-warning"\n                ng-click="apiKeysEdit.deleteApiKey()"\n                ng-disabled="apiKeysEdit.saving.isBusy">Delete</button>\n      </control-group>\n    </form>\n\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("api_keys_index.tpl.html",'<settings-layout data-title="API Keys" class="api-keys-index">\n  <div class="summary">\n    <p>API keys are used to identify applications writing events to Seq. Each key can be associated with a set of properties\n      that will be automatically applied to events written with it.</p>\n  </div>\n\n  <error-box for="apiKeysIndex.loading"></error-box>\n\n  <loading until="apiKeysIndex.license">\n    <div ng-show="apiKeysIndex.license.IsSingleUser" class="alert-note">\n      <p>By default Seq will accept all events sent to the logging endpoint. To enforce that a valid API key is\n        provided when writing events, <a class=\'external\' target=\'_blank\' href=\'https://getseq.net/Pricing\'>visit the Seq website to purchase a license or\n        request a free trial that enables this feature.</a></p>\n    </div>\n    <div ng-hide="apiKeysIndex.license.IsSingleUser" ng-class="{\'alert-success\': apiKeysIndex.original.RequireApiKeyForWritingEvents, \'alert-note\': !apiKeysIndex.original.RequireApiKeyForWritingEvents}">\n      <p>By default Seq will <strong>accept all events</strong> sent to the logging endpoint. Use this setting to enforce that a valid API  key is\n        provided when writing events.</p>\n      <p>\n        <label class="checkbox"><input type="checkbox" ng-model="apiKeysIndex.setting.RequireApiKeyForWritingEvents" /> Require an API key when writing events</label>\n      </p>\n      <error-box for="apiKeysIndex.updating"></error-box>\n      <button type="button"\n              ng-disabled="apiKeysIndex.updating.isBusy"\n              ng-show="apiKeysIndex.setting.RequireApiKeyForWritingEvents != apiKeysIndex.original.RequireApiKeyForWritingEvents"\n              class="btn btn-success"\n              ng-click="apiKeysIndex.saveSettings()">Save changes</button>\n    </div>\n\n    <loading until="apiKeysIndex.apiKeys">\n      <table class="table table-bordered"\n             ng-hide="apiKeysIndex.apiKeys.length == 1 && apiKeysIndex.original.RequireApiKeyForWritingEvents"\n             ng-class="{\'key-required\': apiKeysIndex.original.RequireApiKeyForWritingEvents}">\n        <thead>\n        <tr><th>Title</th><th>Token</th><th>Level</th><th>Rate accepted/arrived (last minute)</th><th>Applied properties</th></tr>\n        </thead>\n        <tbody>\n        <tr ng-repeat="apiKey in apiKeysIndex.apiKeys | orderBy:\'Title\' track by apiKey.Id" ng-class="{\'default-key\': apiKey.IsDefault}">\n          <th class="key-title"><a ng-href="#/settings/api-keys/{{ apiKey.Id }}">{{ apiKey.Title }}</a></th>\n          <td class="source token">{{ apiKey.Token }}</td>\n          <td><level-indicator level="::apiKey.MinimumLevel || \'Verbose\'"></level-indicator>\n            <span ng-hide="apiKey.AppliedFilter.Filter">{{apiKey.MinimumLevel || \'All\' }}</span>\n            <span ng-show="apiKey.AppliedFilter.Filter">Custom</span></td>\n          <td><strong>{{ apiKey.Metrics.InfluxPerMinute }}</strong>/{{ apiKey.Metrics.ArrivalsPerMinute }}</td>\n          <td><p class="source" ng-repeat="property in apiKey.AppliedProperties">{{ property.Name }} = {{ property.Value }}</p></td>\n        </tr>\n        </tbody>\n      </table>\n\n      <p class="instructions" ng-show="apiKeysIndex.apiKeys.length == 0">Create your first API key with the button below.</p>\n\n      <a href="#/settings/api-keys/new" class="btn" ng-class="{\'btn-success\': apiKeysIndex.apiKeys.length == 0}">Add API key</a>\n    </loading>\n  </loading>\n</settings-layout>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("apps_index.tpl.html",'<settings-layout data-title="Apps" class="apps-index">\n  <error-box for="appsIndex.loading"></error-box>\n\n  <div class="summary">\n    <p>Apps are Seq plug-ins that can be run on events from the stream.\n      Many are provided by the user community, and you can also create your own with .NET and the\n      <a href="http://nuget.org/packages/seq.apps" class="external" target="_blank">Seq.Apps</a> package.</p>\n  </div>\n\n  <loading until="appsIndex.apps">\n    <div ng-show="appsIndex.apps.length == 0">\n      <p class="empty-message">No apps are installed. To send email from Seq, connect Seq to your issue tracker or apply custom processing to events\n        as they arrive, jump onto NuGet and see what is available!</p>\n    </div>\n\n    <div ng-show="appsIndex.apps.length" class="summary">\n      <p>\n        <label class="checkbox"><input type="checkbox" ng-model="appsIndex.checkForPackageUpdates" /> Occasionally check for available package updates</label>\n      </p>\n      <error-box for="appsIndex.saving"></error-box>\n      <button type="button"\n              ng-disabled="appsIndex.saving.isBusy"\n              ng-show="appsIndex.checkForPackageUpdates != appsIndex.original.checkForPackageUpdates"\n              class="btn btn-success"\n              ng-click="appsIndex.saveSettings()">Save changes</button>\n    </div>\n\n    <div ng-repeat="app in appsIndex.apps" class="seq-app">\n      <div class="seq-app-icon">\n        <img src="img/seq-app-package-default.png" ng-src="{{ app.Package.IconUrl || \'img/seq-app-package-default.png\' }}" />\n      </div>\n      <div class="seq-app-detail">\n        <h3>{{ app.Name }}</h3>\n        <p class="inline-help" ng-show="app.Package">{{ app.Package.Version }} <span ng-show="app.Package.Authors">by {{ app.Package.Authors }}</span></p>\n        <p>{{app.Description}}</p>\n      </div>\n\n      <div class="seq-app-controls">\n        <a class="btn" ng-show="!app.Package" href="#/settings/apps/{{app.Id}}">Edit</a>\n        <a class="btn btn-primary" ng-show="app.Package.UpdateAvailable" href="#/settings/apps/{{app.Id}}/manage">Update</a>\n        <a class="btn" ng-show="app.Package" href="#/settings/apps/{{app.Id}}/manage">Manage</a>\n        <a class="btn" href="#/settings/apps/{{app.Id}}/run">Add instance</a>\n      </div>\n      <div class="seq-app-instances">\n        <p ng-show="!appsIndex.instances[app.Id]" class="inline-help">No instances of the app are running. To use the app, an instance needs to be started.</p>\n        <a href="#/settings/apps/instances/{{instance.Id}}" ng-repeat="instance in appsIndex.instances[app.Id]" class="seq-app-instance">\n          {{ instance.Title }} <span class="seq-app-processing-rate">{{instance.ProcessedEventsPerMinute}}/minute</span>\n        </a>\n      </div>\n    </div>\n\n    <div ng-class="{\'alert alert-success\': appsIndex.apps.length == 0}" class="apps-install-instructions">\n      <p ng-class="{\'summary inline-help\': appsIndex.apps.length != 0}">You can install <a class="external" target="_blank" href="https://www.nuget.org/packages?q=Tags%3A%22seq-app%22">more apps from nuget.org</a>\n        or a <a href="#/settings/feeds">private NuGet feed</a>. To install an app all you need is its package id.</p>\n      <a class="btn" ng-class="{\'btn-success\': appsIndex.apps.length == 0}" href="#/settings/apps/install">Install from NuGet</a>\n    </div>\n\n  </loading>\n\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){
e.put("apps_install.tpl.html",'<settings-layout data-title="Apps" class="apps-install">\n  <error-box for="appsInstall.loading"></error-box>\n\n  <div class="summary">\n    <p>To install an app you need to know its <em>package id</em>; you can find\n      <a class="external" target="_blank" href="https://www.nuget.org/packages?q=Tags%3A%22seq-app%22">apps on nuget.org</a>\n      by searching for the <strong>seq-app</strong> tag.</p>\n  </div>\n\n  <loading until="appsInstall.feeds">\n    <div ng-show="appsInstall.feeds.length == 0" class="alert alert-error">\n      <h5>A feed is required for this feature</h5>\n      <p>To set up a NuGet feed visit the <a href="#/settings/feeds">Feeds</a> tab.</p>\n    </div>\n\n    <form ng-show="appsInstall.feeds.length > 0" ng-submit="appsInstall.installPackage()">\n      <control-group label="Feed">\n        <select ng-model="appsInstall.package.feedId" ng-options="feed.Id as feed.Name for feed in appsInstall.feeds">\n        </select>\n        <p class="inline-help">To add or modify NuGet feeds, including local filesystem folders, visit the <a href="#/settings/feeds">Feeds</a> tab.</p>\n      </control-group>\n\n      <control-group label="Package id">\n        <input class="input input-xxlarge" type="text" ng-model="appsInstall.package.packageId" />\n        <p class="inline-help">Enter the app\'s NuGet package id, or select a popular package:</p>\n        <p class="inline-help indent">\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.EmailPlus\'">Email+</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.FileArchive\'">File Archive</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.FirstOfType\'">First-of-Type</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.HipChat\'">HipChat</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.Replication\'">Replication</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.Slack\'">Slack</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.Thresholds\'">Thresholds</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.Timeout\'">Timeout</a>\n          <a class="popular" href="" ng-click="appsInstall.package.packageId = \'Seq.App.YouTrack\'">YouTrack</a>\n          <a class="external" target="_blank" href="https://www.nuget.org/packages?q=Tags%3A%22seq-app%22">More&hellip;</a>\n        </p>\n        <p class="inline-help">If the package is already installed as an app, use the app\'s "manage" link to update it.</p>\n      </control-group>\n\n      <control-group label="Version">\n        <input class="input" type="text" placeholder="Latest" ng-model="appsInstall.package.version" />\n      </control-group>\n\n      <control-group>\n        <error-box for="appsInstall.installing"></error-box>\n        <button type="submit"\n                ng-disabled="appsInstall.installing.isBusy"\n                class="btn btn-success">Install</button>\n      </control-group>\n    </form>\n  </loading>\n\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("apps_manage.tpl.html",'<settings-layout data-title="Apps" class="apps-manage">\n  <error-box for="appsManage.loading"></error-box>\n\n  <loading until="appsManage.app">\n    <h4>{{ appsManage.app.Name }}</h4>\n    <div class="summary">\n      <p>Seq can get the latest version of the app package from the feed. The currently installed version\n        is <em>{{ appsManage.app.Package.Version }}</em> from <em>{{ appsManage.feed.Name }}</em>.\n      </p>\n    </div>\n    <form ng-submit="appsManage.updateApp()">\n\n      <control-group label="Package">\n        <span class="uneditable-input">{{appsManage.app.Package.PackageId}}</span>\n        <p class="inline-help">The NuGet package id of the app.</p>\n      </control-group>\n\n      <control-group label="Version">\n        <input class="input" type="text" placeholder="Latest" ng-model="appsManage.package.version" />\n        <p class="inline-help">The version to update to in dotted format.</p>\n      </control-group>\n\n      <control-group>\n        <label class="checkbox"><input type="checkbox" ng-model="appsManage.package.force" /> Update even if the version is already downloaded or installed</label>\n      </control-group>\n\n      <control-group>\n        <error-box for="appsManage.updating"></error-box>\n        <button type="submit"\n                class="btn btn-success"\n                ng-disabled="appsManage.updating.isBusy">Update</button>\n        <button type="button"\n                ng-show="appsManage.app.Id"\n                class="btn btn-warning"\n                ng-click="appsManage.deleteApp()"\n                ng-disabled="appsManage.updating.isBusy">Delete</button>\n      </control-group>\n    </form>\n  </loading>\n\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("apps_run.tpl.html",'<settings-layout data-title="Apps" class="apps-run">\n  <error-box for="appsRun.loading"></error-box>\n\n  <loading until="!appsRun.loading.isBusy">\n    <div class="summary">\n      <img class="app-heading-icon" src="img/seq-app-package-default.png" ng-src="{{ appsRun.app.entity.Package.IconUrl || \'img/seq-app-package-default.png\' }}" />\n\n      <h4>Instance of {{ appsRun.app.entity.Name }}</h4>\n\n      <p>Each instance of an app has its own settings and bookmark in the event stream. Apps can either receive events manually, when\n        invoked from the <a href="#/events">events</a> screen, or run in the background to process the events matching a signal.</p>\n    </div>\n\n    <form ng-submit="appsRun.saveInstance()">\n\n      <control-group label="Title">\n        <input class="title-input input-xxlarge" type="text" ng-model="appsRun.instance.entity.Title" />\n        <p ng-show="appsRun.instance.entity.Id"><a href="#/events/?filter=AppInstanceId%20%3D%20\'{{appsRun.instance.entity.Id}}\'">View events raised by this instance &raquo;</a></p>\n      </control-group>\n\n      <control-group>\n        <label><input class="input" type="checkbox" ng-model="appsRun.isManualInputOnly" ng-true-value="false" ng-false-value="true" /> Stream incoming events</label>\n        <p class="inline-help">App instances can be triggered by alerts set on dashboards, and events can be sent manually to any app from the\n          drop-down menu in the event details. Check this box to send events as they arrive.</p>\n      </control-group>\n\n      <div ng-show="appsRun.instance.entity && !appsRun.isManualInputOnly">\n        <control-group>\n          <h4>Input</h4>\n        </control-group>\n\n        <control-group label="Signal">\n          <signal-expression-editor expression="appsRun.instance.entity.InputSignalExpression"></signal-expression-editor>\n          <p class="inline-help">This filtering does not apply to manual input or alert notifications.</p>\n        </control-group>\n\n        <control-group>\n          <label><input class="input" type="checkbox" ng-model="appsRun.instance.entity.DisallowManualInput" /> Prevent manual input</label>\n          <p class="inline-help">Exclude the instance from the <em>Send to app</em> menu and disallow attempts\n            to send events manually, or through alerts configured by non-administrators.</p>\n        </control-group>\n\n        <control-group>\n          <label><input class="input" type="checkbox" ng-model="appsRun.bufferedSort" /> Re-order input by timestamp</label>\n          <p class="inline-help">If checked, input to the app will be ordered using a 30-second disk buffer. This prevents\n            out-of-order processing at the expense of a <strong>significant performance penalty</strong>. Events arriving more\n            than 30 seconds late are discarded.</p>\n        </control-group>\n\n        <control-group label="Debounce window">\n          <duration-input duration="appsRun.debounceWindow" />\n          <p class="inline-help">If nonzero, events arriving for the app will be ignored for the specified time after an initial event\n            is processed. Note that reconfiguring the app or restarting Seq will commence a new debounce window.</p>\n        </control-group>\n\n        <control-group label="Events per debounce window" ng-show="!appsRun.debounceWindow.isZero()">\n          <input class="input" type="number" ng-model="appsRun.instance.entity.EventsPerSuppressionWindow" />\n          <p class="inline-help">Allow up to <em>n</em> events during the debounce window. For example, to allow a maximum of 10 events\n          to reach the app per minute, specify a window of one minute and a value of 10 here.</p>\n        </control-group>\n      </div>\n\n      <control-group ng-show="appsRun.app.entity.AvailableSettings.length > 0">\n        <h4>Settings</h4>\n        <p class="inline-help"><a href="" ng-click="appsRun.editAsJson()">Edit as JSON &raquo;</a></p>\n        <raw-editor data="appsRun.instance.entity.Settings" is-visible="appsRun.state.state.isRawEditing" edited="appsRun.jsonEdited($data)"></raw-editor>\n      </control-group>\n\n      <div class="control-group" ng-repeat="available in appsRun.app.entity.AvailableSettings track by available.Name">\n        <label ng-show="available.Type != \'Checkbox\'" class="control-label">{{ available.DisplayName }}<span ng-show="available.IsOptional"> (optional)</span></label>\n        <div class="controls">\n          <div class="setting-input" ng-class="{\'app-setting-checkbox\': available.Type == \'Checkbox\'}">\n            <app-setting-input type="available.Type" display-name="available.DisplayName" model="appsRun.instance.entity.Settings[available.Name]"></app-setting-input>\n            <img title="Disallow overrides" class="invocation-override" ng-click="appsRun.instance.denyInvocationOverride(available.Name)" ng-if="appsRun.instance.isInvocationOverridable(available.Name)" src="img/invocation-allowed.svg" />\n            <img title="Allow overrides" class="invocation-override" ng-click="appsRun.instance.allowInvocationOverride(available.Name)" ng-if="!appsRun.instance.isInvocationOverridable(available.Name)" src="img/invocation-not-allowed.svg" />\n          </div>\n          <p ng-show="available.HelpText" class="inline-help">{{available.HelpText}}</p>\n          <p ng-show="appsRun.instance.isInvocationOverridable(available.Name)" class="inline-help invocation-override-help">\n            This setting can be overridden by users when notifications are created or events are manually sent to the app. If a\n            default value is specified for the setting, this will be visible to all users.\n          </p>\n        </div>\n      </div>\n\n      <control-group ng-show="appsRun.instance.entity && !appsRun.instance.entity.Id">\n        <h4>Creation options</h4>\n        <label><input class="input" type="checkbox" ng-model="appsRun.createOptions.runOnExisting" /> Run the app on existing events</label>\n      </control-group>\n\n      <control-group>\n        <error-box for="appsRun.saving"></error-box>\n        <button class="btn btn-success"\n                ng-disabled="appsRun.saving.isBusy">Save changes</button>\n        <button type="button"\n                ng-disabled="appsRun.saving.isBusy"\n                ng-show="appsRun.instance.entity.Id"\n                class="btn btn-warning"\n                ng-click="appsRun.deleteInstance()">Delete</button>\n      </control-group>\n    </form>\n  </loading>\n\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("backup_index.tpl.html",'<settings-layout data-title="Backup" class="backup-index">\n  <p class="summary">Seq periodically backs up metadata and configuration, including API keys, users, signals and apps,\n    to a configured location on the Seq server machine. Events are not included &mdash; the\n    <a href="https://nuget.org/packages/seq.app.replication">Seq.App.Replication</a> or\n    <a href="https://nuget.org/packages/seq.app.filearchive">Seq.App.FileArchive</a> packages can be used to create redundant copies of log event\n    data if this is required.</p>\n  <p class="summary">Backups are encrypted with AES-256 and cannot be restored without the Seq master key, which must be retrieved from the\n    server machine using <code>seq.exe show-key</code> and kept in a secure location.</p>\n  <error-box for="backupIndex.loading"></error-box>\n  <loading while="backupIndex.loading.isBusy">\n    <div class="alert-warning" ng-show="!backupIndex.masterKeyIsBackedUp">\n      <p>Without a backup of the Seq master key, backup files cannot be restored. The key must be retrieved in cleartext using\n        the <code>seq.exe show-key</code> command.</p>\n      <button type="button" class="btn" ng-click="backupIndex.dismissWarning()">Dismiss</button>\n    </div>\n\n    <p ng-hide="backupIndex.backups.length" class="summary inline-help">No backups are present in the configured location. If this is unexpected,\n      check the internal log files on the Seq server.</p>\n\n    <h4 ng-show="backupIndex.backups.length">Current Backups</h4>\n    <p ng-show="backupIndex.backups.length" class="summary">The files listed below are present in the configured backup location on the server.</p>\n    <table ng-show="backupIndex.backups.length" class="backups">\n      <thead>\n      <tr><th>Created</th><th>Filename</th><th>Size (bytes)</th></tr>\n      </thead>\n      <tbody>\n      <tr ng-repeat="backup in backupIndex.backups track by backup.Id">\n        <td>{{backup.CreatedAt | calendar}}</td>\n        <td><a href="" ng-href="{{backup.Links.Content}}">{{backup.Filename}}</a></td>\n        <td>{{backup.FileSizeBytes}}</td>\n      </tr>\n      </tbody>\n    </table>\n\n    <p ng-show="backupIndex.backups.length" class="summary inline-help">If backups are missing from this list, check the internal log files\n      recorded on the Seq server.</p>\n\n    <form ng-if="backupIndex.immediateBackupUrl" action="{{backupIndex.immediateBackupUrl}}" method="POST">\n      <button type="submit" class="btn-primary">Download an immediate backup</button>\n      <a class="btn btn-link" href="#/settings/backup/schedule">Backup settings</a>\n    </form>\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("backup_schedule.tpl.html",'<settings-layout data-title="Backup" class="backup-schedule">\n  <p class="summary">Changes to backup settings will apply immediately.</p>\n  <error-box for="backupSchedule.loading"></error-box>\n  <loading while="backupSchedule.loading.isBusy">\n    <form ng-submit="backupSchedule.saveSettings()">\n      <control-group label="Backup time of day">\n        <input class="input-small" type="text" ng-model="backupSchedule.settings.BackupUtcTimeOfDay" />\n        <p class="inline-help">The 24-hour time of day <strong>in UTC</strong> at which backups\n          should be created.</p>\n      </control-group>\n\n      <control-group label="Backup location">\n        <input class="input-xxlarge" type="text" ng-model="backupSchedule.settings.BackupLocation" placeholder="(Storage)\\Backups" />\n        <p class="inline-help">A folder on the Seq server machine where backup files are stored.</p>\n      </control-group>\n\n      <control-group label="Backups to keep">\n        <input class="input-small" type="number" ng-model="backupSchedule.settings.BackupsToKeep" />\n        <p class="inline-help">The number of backup files to keep. Old files will be automatically deleted.</p>\n      </control-group>\n\n      <control-group>\n        <error-box for="backupSchedule.saving"></error-box>\n        <button type="submit" class="btn btn-success" ng-disabled="backupIndex.saving.isBusy">Save changes</button>\n        <a class="btn" href="#/settings/backup">Cancel</a>\n      </control-group>\n    </form>\n\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("feeds_edit.tpl.html",'<settings-layout data-title="Feeds">\n  <div class="summary">\n    <p>Provide details of the NuGet feed below.</p>\n  </div>\n\n  <error-box for="editFeed.loading"></error-box>\n  <loading until="editFeed.feed">\n    <form ng-submit="editFeed.saveFeed()">\n      <control-group label="Name">\n        <input class="title-input" type="text" ng-model="editFeed.feed.Name" />\n      </control-group>\n\n      <control-group label="Location">\n        <input class="input-xxlarge" type="text" ng-model="editFeed.feed.Location" />\n        <p class="inline-help">A feed can pull from an HTTP(S) URL or a Windows file share.</p>\n      </control-group>\n\n      <control-group label="Username">\n        <input type="text" ng-model="editFeed.feed.Username" />\n        <p class="inline-help">A password can only be set when a username is provided.</p>\n      </control-group>\n\n      <div ng-show="editFeed.feed.Username" ng-init="editFeed.changePassword = false">\n\n        <control-group ng-hide="!editFeed.feed.Id">\n          <label class="checkbox"><input type="checkbox" ng-disabled="editFeed.changePassword" ng-model="editFeed.changePassword" /> Set password</label>\n        </control-group>\n\n        <control-group label="Password" ng-show="editFeed.changePassword || !editFeed.feed.Id">\n          <input type="password" ng-model="editFeed.NewPassword" />\n        </control-group>\n      </div>\n\n      <control-group>\n        <error-box for="editFeed.saving"></error-box>\n        <button type="submit" class="btn btn-success" ng-disabled="editFeed.saving.isBusy">Save changes</button>\n        <button type="button" ng-show="editFeed.feed.Id" class="btn btn-warning" ng-click="editFeed.deleteFeed()" ng-disabled="editFeed.saving.isBusy">Delete</button>\n      </control-group>\n\n    </form>\n\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("feeds_index.tpl.html",'<settings-layout data-title="Feeds" class="feeds-index">\n  <div class="summary">\n    <p>Seq apps can be installed from NuGet. There\'s a growing collection of app packages on the\n      public <a class="external" target="_blank" href="http://nuget.org">nuget.org</a>\n      feed, and you can add your own organizational feeds as well.</p>\n  </div>\n\n  <loading until="feedsIndex.feeds">\n    <table class="feeds">\n      <thead>\n        <tr><th>Name</th><th>Location</th></tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="feed in feedsIndex.feeds track by feed.Id">\n          <th><a ng-href="#/settings/feeds/{{feed.Id}}">{{ feed.Name }}</a></th>\n          <td>{{ feed.Location }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <a href="#/settings/feeds/new" class="btn">Add feed</a>\n  </loading>\n\n</settings-layout>\n\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("retention_edit.tpl.html",'<settings-layout data-title="Retention">\n  <div class="summary">\n    <p>Provide details of the retention policy here.</p>\n  </div>\n  <error-box for="editRetention.loading"></error-box>\n  <loading until="editRetention.policy">\n    <form ng-submit="editRetention.savePolicy()">\n      <control-group label="After">\n        <input class="input-small" type="number" ng-model="editRetention.time.parts.days" /> days\n        <input class="input-small" type="number" ng-model="editRetention.time.parts.hours" /> hours\n        <p class="inline-help">Seq will periodically delete events covered by the policy based on their timestamp. Disk\n        space will be reclaimed by a background compaction process and may not be available immediately.</p>\n      </control-group>\n\n      <control-group label="Delete">\n        <signal-expression-editor expression="editRetention.policy.RemovedSignalExpression"></signal-expression-editor>\n        <p class="inline-help" ng-hide="editRetention.policy.RemovedSignalExpression"><strong>All events</strong> will be deleted by the policy.</p>\n        <p class="inline-help" ng-show="editRetention.policy.RemovedSignalExpression">Events that match all of the selected signals will be deleted by the policy.</p>\n      </control-group>\n\n      <control-group>\n        <error-box for="editRetention.saving"></error-box>\n        <button class="btn btn-success" ng-disabled="editRetention.saving.isBusy">Save changes</button>\n        <button class="btn btn-warning" type="button" ng-show="editRetention.policy.Id"\n                ng-click="editRetention.deletePolicy()" ng-disabled="editRetention.saving.isBusy">Delete</button>\n      </control-group>\n\n    </form>\n  </loading>\n</settings-layout>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("retention_index.tpl.html",'<settings-layout data-title="Retention" class="retention-index">\n  <div class="summary">\n    <p>Seq periodically finds events matching older than each retention period, and deletes them if they match the associated signal.</p>\n  </div>\n  <error-box for="retentionIndex.policies"></error-box>\n  <loading until="retentionIndex.policies">\n    <p class="empty-message" ng-show="retentionIndex.policies.length == 0">No retention policies are defined. To keep Seq running\n      smoothly it is recommended that at least one policy is configured.</p>\n    <div ng-show="retentionIndex.policies.length > 0">\n      <table class="policies">\n        <thead>\n        <tr><th>After</th><th>Delete</th></tr>\n        </thead>\n        <tbody>\n        <tr ng-repeat="policy in retentionIndex.policies">\n          <th><a ng-href="#/settings/retention/{{policy.Id}}">{{ policy.RetentionTime | timespan }}</a></th>\n          <td><signal-expression-editor expression="policy.RemovedSignalExpression" read-only="true"></signal-expression-editor></td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <a href="#/settings/retention/new" class="btn">Add policy</a>\n    <a href="#/events?deletionEnabled" class="btn btn-link">Manually delete events</a>\n  </loading>\n</settings-layout>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("auth.tpl.html",'<settings-layout data-title="System">\n  <h4>{{ auth.settings.isAuthenticationEnabled ? \'Change\' : \'Enable\' }} Authentication</h4>\n\n  <error-box for="auth.loading"></error-box>\n  <loading while="auth.loading.isBusy">\n    <div ng-show="auth.license.IsSingleUser">\n      <div class="alert-warning">\n        <h5>License required</h5>\n        <p>User authentication requires a different license from the one already configured.</p>\n        <p>Visit the Seq website to <a class=\'external\' target=\'_blank\' href=\'https://getseq.net#pricing\'>purchase\n          a license</a> or <a class=\'external\' target=\'_blank\' href=\'https://getseq.net/Trial\'>request a free trial</a> that enables this feature.</p>\n        <p><a class="btn" href="#/settings/license">License settings</a></p>\n      </div>\n    </div>\n\n    <form ng-submit="auth.enable()" ng-show="!auth.license.IsSingleUser">\n\n      <div class="alert-info">\n        <p>Seq provides basic (username/password), Active Directory and Azure AD authentication. After setting a username and password\n          for the first administrator, you can create and configure additional user accounts.</p>\n        <p>If access is lost for any reason, passwords can be reset from the <code>seq.exe</code> command-line.</p>\n      </div>\n\n      <p class="summary">Please provide details for the first administrator.</p>\n\n      <control-group label="Username">\n        <input type="text" class="input input-large" ng-model="auth.user.Username" />\n        <p class="inline-help">Under Active Directory, this must be in <code>DOMAIN\\user</code> format.\n          For Azure Active Directory, the user\'s email address is required here.</p>\n      </control-group>\n\n      <control-group label="Display name">\n        <input class="input-large" type="text" ng-model="auth.user.DisplayName" />\n      </control-group>\n\n      <control-group label="Email address">\n        <input class="input-xxlarge" type="text" ng-model="auth.user.EmailAddress" />\n        <p class="inline-help">Will show the user\'s <a href="https://gravatar.com">Gravatar</a>.</p>\n      </control-group>\n\n      <control-group label="Authentication provider">\n        <select class="input" ng-model="auth.provider">\n          <option value="Basic">Basic</option>\n          <option value="ActiveDirectory">Active Directory</option>\n          <option value="AzureAD">Azure Active Directory</option>\n        </select>\n      </control-group>\n\n      <change-password user="auth.user"\n                       required="true" ng-show="auth.provider == \'Basic\' || auth.provider == \'ActiveDirectory\'"\n                       issues="auth.passwordIssues"></change-password>\n\n      <div ng-show="auth.provider == \'AzureAD\'">\n        <p class="summary">Before Seq can authenticate users in your Azure Active Directory instance, it must be registered as an <em>Application</em>\n          in the directory. Please <a href="http://docs.getseq.net/docs/azure-active-directory" target=\'_blank\'>review the instructions</a> in the Seq\n          documentation.</p>\n\n        <control-group label="Tenant id">\n          <input class="input-xxlarge" type="text" ng-model="auth.azureAD.tenantId.Value" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" />\n          <p class="inline-help">This is a GUID identifying the directory itself.</p>\n        </control-group>\n\n        <control-group label="Client id">\n          <input class="input-xxlarge"  type="text" ng-model="auth.azureAD.clientId.Value" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" />\n          <p class="inline-help">This GUID identifies the <em>Seq</em> application registered in the tenant.</p>\n        </control-group>\n\n        <control-group label="Client key">\n          <input class="input-xxlarge"  type="password" ng-model="auth.azureAD.clientKey.Value" placeholder="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=" />\n          <p class="inline-help">Client secret key assigned to the <em>Seq</em> application. This is a string that may include\n            trailing <code>=</code> characters.</p>\n        </control-group>\n      </div>\n\n      <control-group>\n        <error-box for="auth.saving"></error-box>\n        <button class="btn btn-success" ng-disabled="auth.saving.isBusy || auth.passwordIssues.invalid">Enable</button>\n      </control-group>\n\n    </form>\n  </loading>\n</settings-layout>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){
e.put("system_index.tpl.html",'<settings-layout data-title="System">\n  <div class="summary">\n    <p>These settings apply immediately to the running Seq instance. More information on configuring Seq can be found in the\n      <a href="https://getseq.net/help">documentation</a>.</p>\n  </div>\n  <error-box for="systemIndex.loading"></error-box>\n  <loading until="systemIndex.settings">\n\n    <form ng-submit="systemIndex.saveSettings()">\n      <control-group><h4>Ingestion</h4></control-group>\n      <control-group label="Raw ingestion payload limit">\n        <input class="input" type="number" ng-model="systemIndex.settings.RawPayloadMaximumContentLength" /> bytes\n        <p class="inline-help">This setting limits the size of the <strong>batch payload</strong> that Seq will attempt to parse and\n          ingest at the logging endpoint.</p>\n        <p class="inline-help">Very large payloads can cause excessive CPU usage and timeouts during ingestion. Increasing\n          this from the default value of <code>10485760</code> (10 MB) is not recommended. Instead, reduce the batch size in the\n          client logging library.</p>\n      </control-group>\n\n      <control-group label="Raw event body limit">\n        <input class="input" type="number" ng-model="systemIndex.settings.RawEventMaximumContentLength" /> bytes\n        <p class="inline-help">This setting limits the size of <strong>individual events</strong> that Seq will accept at the logging endpoint.</p>\n        <p class="inline-help">Very large events can cause significant performance problems. Increasing\n          this from the default value of <code>262144</code> (256 KB) is not recommended. Instead, filter out large events in the\n          client logging library.</p>\n      </control-group>\n\n      <control-group>\n        <label><input class="input" type="checkbox" ng-model="systemIndex.settings.LazilyFlushEventWrites" />  Allow buffered writes</label>\n        <p class="inline-help">If enabled, incoming events may be buffered briefly in memory before writing to disk, significantly\n          improving I/O performance on slow disks. This does make loss of recently-written data possible in the event of a system crash.</p>\n        <p class="inline-help">Allowing buffered writes is useful for non-SSD cloud-based virtual machines under load.</p>\n      </control-group>\n\n      <control-group label="Minimum free storage space">\n        <input class="input" type="number" ng-model="systemIndex.settings.MinimumFreeStorageSpace" /> bytes\n        <p class="inline-help">To prevent system issues Seq will stop accepting events if free disk\n          space falls below this threshold.</p>\n      </control-group>\n\n      <control-group><h4>Updates</h4></control-group>\n\n      <control-group>\n        <label><input class="input" type="checkbox" ng-model="systemIndex.settings.CheckForUpdates" />  Check for updates</label>\n        <p class="inline-help">Occasionally check <a href="https://getseq.net">getseq.net</a> for new Seq versions.</p>\n      </control-group>\n\n      <control-group><h4>Authentication</h4></control-group>\n\n      <control-group label="Authentication provider">\n        <span class="uneditable-input">{{ systemIndex.settings.IsActiveDirectoryAuthentication ? \'Active Directory\' : systemIndex.settings.AzureADTenantId ? \'Azure Active Directory\' : \'Basic\' }}</span>\n        <a href="#/settings/system/auth">Change &hellip;</a>\n        <p class="inline-help" ng-hide="systemIndex.settings.IsActiveDirectoryAuthentication || systemIndex.settings.AzureADTenantId">\n          View and change <a href="#/settings/system/password-policy">password length and complexity</a> requirements.\n        </p>\n      </control-group>\n\n      <control-group ng-show="systemIndex.settings.IsActiveDirectoryAuthentication || systemIndex.settings.AzureADTenantId">\n        <label><input class="input" type="checkbox"\n                      ng-model="systemIndex.settings.AutomaticallyGrantUserAccessToADAccounts" /> Automatically provision user-level access</label>\n        <p class="inline-help">If checked, Active Directory/Azure AD users who successfully authenticate will be granted\n          non-administrative access.</p>\n      </control-group>\n\n      <control-group label="Automatic provisioning group" ng-show="systemIndex.settings.IsActiveDirectoryAuthentication && systemIndex.settings.AutomaticallyGrantUserAccessToADAccounts">\n        <input class="input" type="text" placeholder="DOMAIN" ng-model="systemIndex.partials.automaticAccessADDomain" /> \\ <input class="input" type="text" placeholder="Group" ng-model="systemIndex.partials.automaticAccessADGroup" />\n        <p class="inline-help">If a domain and group name are specified here, only users that are members of the group will\n          have access provisioned automatically.</p>\n      </control-group>\n\n      <control-group>\n        <error-box for="systemIndex.saving"></error-box>\n        <button type="submit" class="btn btn-success" ng-disabled="systemIndex.saving.isBusy">Save changes</button>\n      </control-group>\n\n    </form>\n  </loading>\n</settings-layout>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("system_password_policy.tpl.html",'<settings-layout data-title="System">\n  <h4>Password Policy</h4>\n  <p class="summary">The settings below will apply to user passwords under the basic authentication provider.</p>\n\n  <error-box for="systemPasswordPolicy.loading"></error-box>\n  <loading while="systemPasswordPolicy.loading.isBusy">\n  <form ng-submit="systemPasswordPolicy.save()">\n    <control-group label="Minimum length">\n      <input class="input" type="number" ng-model="systemPasswordPolicy.minimumLength" /> characters\n      <p class="inline-help">The minimum length of user passwords. Specify <code>0</code> for no limit.</p>\n    </control-group>\n\n    <control-group label="Required character classes">\n      <label><input class="input" type="checkbox" ng-model="systemPasswordPolicy.requireUppercase" />  Uppercase letter</label><br>\n      <label><input class="input" type="checkbox" ng-model="systemPasswordPolicy.requireLowercase" />  Lowercase letter</label><br>\n      <label><input class="input" type="checkbox" ng-model="systemPasswordPolicy.requireDigit" />  Digit</label><br>\n      <label><input class="input" type="checkbox" ng-model="systemPasswordPolicy.requirePunctuation" />  Symbol or punctuation character</label><br>\n      <p class="inline-help">Passwords must contain at least one character from each selected class.</p>\n    </control-group>\n\n    <control-group>\n      <error-box for="systemPasswordPolicy.saving"></error-box>\n      <button class="btn btn-success" ng-disabled="systemPasswordPolicy.saving.isBusy">Save changes</button>\n    </control-group>\n  </form>\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("users_defaults.tpl.html",'<settings-layout data-title="Users" class="users-defaults">\n  <p class="summary">These defaults will apply when new users are created, either through the <a href="#/settings/users">Users</a>\n    screen, or when automatic provisioning takes place. When adding users manually, you\'ll have the option to modify\n    these defaults before the new user account is created.</p>\n  <error-box for="usersDefaults.loading"></error-box>\n  <loading while="usersDefaults.loading.isBusy">\n    <form ng-submit="usersDefaults.saveSettings()">\n\n      <control-group label="Show signals">\n        <signal-picker signal-ids="usersDefaults.showSignalIds"></signal-picker>\n        <p class="inline-help">These signals will be pre-selected to appear in the user\'s Signal List. The\n        user can add additional signals through the <code>+</code> (add signal) button.</p>\n      </control-group>\n\n      <control-group>\n        <error-box for="usersDefaults.saving"></error-box>\n        <button type="submit" class="btn btn-success" ng-disabled="usersDefaults.saving.isBusy">Save changes</button>\n        <a class="btn" href="#/settings/users">Cancel</a>\n      </control-group>\n    </form>\n  </loading>\n</settings-layout>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("users_edit.tpl.html",'<settings-layout data-title="Users">\n  <div class="summary">\n    <p>Provide details of the user account. When the user has logged in, they may update their display name or\n    email address.</p>\n  </div>\n  <error-box for="editUser.loading"></error-box>\n  <loading until="editUser.user">\n\n    <form ng-submit="editUser.saveUser()">\n      <control-group label="Username">\n        <input class="input title-input input-large" type="text" ng-model="editUser.user.Username" autocomplete="off" />\n        <p class="inline-help">The username that the user will log in to Seq with.</p>\n        <p class="inline-help">Under Active Directory, this must be in <code>DOMAIN\\user</code> format. For Azure Active Directory, the user\'s email address is required here.</p>\n      </control-group>\n\n      <control-group label="Display name">\n        <input class="input input-large" type="text" ng-model="editUser.user.DisplayName" autocomplete="off" />\n      </control-group>\n\n      <control-group label="Email address">\n        <input type="text" ng-model="editUser.user.EmailAddress" class="input-xxlarge" autocomplete="off" />\n        <p class="inline-help">Will be used to show the user\'s <a href="https://gravatar.com">Gravatar</a>.</p>\n      </control-group>\n\n      <control-group ng-show="editUser.canDemote">\n        <label class="checkbox"><input type="checkbox" ng-model="editUser.user.IsAdministrator" /> Administrative</label>\n      </control-group>\n\n      <control-group label="View filter" ng-show="!editUser.user.IsAdministrator">\n        <filter-editor model="editUser.user.ViewFilter" busy="editUser.parsingFilter"></filter-editor>\n        <p class="inline-help">A filter that limits what data the user can see in Seq.</p>\n        <p class="inline-help">Modifying the filter for an active user may incur a short delay as dash items belonging\n         to the user are reconfigured.</p>\n      </control-group>\n\n      <control-group label="Show signals" ng-hide="editUser.user.Id">\n        <signal-picker signal-ids="editUser.showSignalIds" separator=""></signal-picker>\n        <p class="inline-help">These signals will be pre-selected to appear in the user\'s Signal List.</p>\n      </control-group>\n\n\n      <div ng-if="editUser.settings.isBasicAuth">\n        <change-password user="editUser.user" issues="editUser.passwordIssues"></change-password>\n\n        <control-group>\n          <label><input class="input" type="checkbox" ng-model="editUser.user.MustChangePassword" />  User must change password at next login</label>\n          <p class="inline-help">If checked, the user will be prompted to set a new password the next time they log into Seq.</p>\n        </control-group>\n      </div>\n\n      <control-group>\n        <error-box for="editUser.saving"></error-box>\n        <button class="btn btn-success"\n                ng-disabled="editUser.saving.isBusy || editUser.passwordIssues.invalid || editUser.parsingFilter.isBusy">Save changes</button>\n        <button type="button" ng-show="editUser.user.Id && editUser.canDelete"\n                ng-disabled="editUser.saving.isBusy"\n                class="btn btn-warning" ng-click="editUser.deleteUser()">Delete</button>\n      </control-group>\n\n    </form>\n  </loading>\n</settings-layout>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("users_index.tpl.html",'<settings-layout data-title="Users" class="users-index">\n  <div class="summary">\n    <p>Seq supports per-user preferences and settings.</p>\n  </div>\n  <error-box for="usersIndex.loading"></error-box>\n\n  <loading until="usersIndex.license">\n    <div ng-show="usersIndex.license.IsSingleUser">\n      <div class="alert alert-warning">\n        <h4>License required</h4>\n        <p>User authentication requires a different license from the one already configured.</p>\n        <p>Visit the Seq website to <a class=\'external\' target=\'_blank\' href=\'https://getseq.net#pricing\'>purchase\n          a license</a> or <a class=\'external\' target=\'_blank\' href=\'https://getseq.net/Trial\'>request a free trial</a> that enables this feature.</p>\n        <p><a class="btn" href="#/settings/license">License settings</a></p>\n      </div>\n    </div>\n\n    <div ng-hide="usersIndex.license.IsSingleUser || usersIndex.settings.isAuthenticationEnabled">\n\n      <div class="alert alert-info">\n        <h4>Authentication is currently disabled</h4>\n        <p>\n          Enabling authentication allows the creation and management of user\n          accounts. You\'ll be prompted to set a password for the <strong>admin</strong> user to get started.\n        </p>\n        <p><a href="#/settings/users/auth" class="btn btn-success">Enable</a></p>\n      </div>\n\n    </div>\n\n    <div ng-show="usersIndex.settings.isAuthenticationEnabled">\n\n      <loading until="usersIndex.users">\n\n        <table class="users-table">\n          <thead>\n          <tr><th>Username</th><th>Display Name</th><th>Is Administrative</th></tr>\n          </thead>\n          <tbody>\n          <tr ng-repeat="user in usersIndex.users track by user.Id">\n            <th><a ng-href="#/settings/users/{{user.Id}}">{{ user.Username }}</a></th>\n            <td>{{ user.DisplayName }}</td>\n            <td>{{ user.IsAdministrator | yesNo }}</td>\n          </tr>\n          </tbody>\n        </table>\n\n        <a href="#/settings/users/new" class="btn">Add User</a>\n        <a href="#/settings/users/defaults" class="btn btn-link">New User Defaults</a>\n      </loading>\n\n    </div>\n\n  </loading>\n</settings-layout>')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("permalink.tpl.html",'<div>\n  <modal is-visible="isVisible">\n    <div class="permalink">\n      <h2>Permalink</h2>\n      <div class="permalink-url"><a href="{{permalink.url}}" target="_blank">{{ permalink.url }}</a></div>\n      <p class="inline-help">The event will be exempt from any retention policy that might apply to it. You can remove\n      the permalink from your <a href="#/user/permalinks">user preferences</a>.</p>\n      <div class="actions">\n        <button class="btn" ng-click="permalink.close()">Close</button>\n      </div>\n    </div>\n  </modal>\n</div>\n')}])}(),function(e){try{e=angular.module("seq-ui2")}catch(n){e=angular.module("seq-ui2",[])}e.run(["$templateCache",function(e){e.put("available_updates.tpl.html",'<div class="available-updates" ng-show="availableUpdates.isDisabled || availableUpdates.updateAvailable">\n  <span ng-show="availableUpdates.isDisabled" class="check-disabled"><a href="" ng-click="availableUpdates.enable()">Enable update check</a></span>\n  <span ng-show="availableUpdates.updateAvailable" class="update-available"><a ng-href="{{availableUpdates.browseUrl}}" target="_blank">Download {{ availableUpdates.updateDescription }}</a></span>\n</div>\n')}])}();
//# sourceMappingURL=maps/seq-ui2-tpl-1516172539357.min.js.map
